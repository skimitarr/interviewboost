{
  "add": "Добавить",
  "addComment": "Добавьте комментарий",
  "cancel": "Отменить",
  "chooseDirection": "Выберете направление, а затем вопрос",
  "comment": "Комментарий",
  "comingSoon": "Скоро",
  "downloadReport": "Скачать отчет",
  "feedback": "Обратная\u00A0связь",
  "generalFeedback": "Общий вывод",
  "generatingReport": "Пожалуйста подождите, генерирую отчет",
  "goToReport": "Перейти к отчету",
  "home": "Домой",
  "interview": "Собеседование",
  "letsGetStarted": "Начнем",
  "listTechnologies": "Список технологий и вопросов для проведения собеседования в 2023 году",
  "logInYourAccount": "Войдите в свой аккаунт",
  "logOut": "Выйти",
  "questions": "Вопросы",
  "questionsFor": "Вопросы для",
  "rating": "Оценка",
  "report": "Отчет",
  "reports": "Отчеты",
  "rateAnswerFrom0To100": "Оцените ответ от 0 до 100",
  "reportsHistory": "История отчетов",
  "save": "Сохранить",
  "sendFeedback": "Отправить отзыв или сообщить об ошибке",
  "selectAll": "Выбрать все",
  "selectSpecialization": "Для начала Вам необходимо выбрать специализацию",
  "selectATechnologyStack": "Выберете стек технологий",
  "send": "Отправить",
  "signIn": "Войти",
  "signInWithGitHub": "Войти через GitHub",
  "signInWithGoogle": "Войти через Google",
  "whatIsHTML": "Что такое HTML и для чего он используется?",
  "HTMLElement": "Что такое HTML-элемент? Какова его структура?",
  "attributesInHTML": "Что такое атрибуты в HTML? Как они используются в элементах?",
  "globalAttributes": "Какие глобальные атрибуты есть в HTML?",
  "contentCategories": "Что такое категории контента в HTML5?",
  "primaryContentCategories": "Какие категории считаются основными категориями контента?",
  "doctype": "Что такое doctype? И для чего он используется?",
  "structureHTMLPage": "Опишите базовую структуру HTML-страницы.",
  "validation": "Что такое валидация? И какие типы проверок HTML документа вы знаете?",
  "stagesValidationChecks": "Основные этапы проверок валидности HTML-документа?",
  "HTMLBlocks": "Если представить HTML5 как открытую веб-платформу, из каких блоков он состоит?",
  "createButton": "Какой тэг использовать для того, что бы сверстать кнопку?",
  "inlineStyle": "Что такое инлайновый стиль? Можно ли его переопределить?",
  "elementsDefaultStyles": "Есть ли у HTML элементов свои дефолтные специфичные стили?",
  "semantics": "Что такое семантика? Какие семантичные тэги вы знаете?",
  "semanticallyStructureImage": "Как семантически правильно сверстать картинку с подписью?",
  "typesListsHTML": "Типы списков в HTML?",
  "alt": "Для какого тэга используется атрибут alt и зачем он нужен?",
  "strongEmAndBI": "Какая разница между тэгами strongem и bi?",
  "typesInputHTML": "Типы input элементов в HTML?",
  "dataAttributes": "Для чего используют data-атрибуты?",
  "asyncAndDefer": "Разница между script scriptasync и scriptdefer?",
  "datalistElement": "Для чего используется элемент datalist?",
  "placeLinkCSS": "Почему хорошей практикой считается располагать link для подключения CSS стилей внутри тэга head а script для подключения JS ставить перед закрывающимся тэгом body?",
  "metaTags": "Что такое мета-тэги?",
  "headTag": "Что описывается в тэге head?",
  "trThTdTags": "Для чего используются тэги tr th td?",
  "viewport": "Расскажите о meta-теге с nameviewport?",
  "canvas": "Что такое элемент canvas? И для чего он используется?",
  "svgAndCanvas": "Что такое svg и canvas?",
  "canvasAndSvg": "Разница между canvas и svg?",
  "betterUseCanvasAndSvg": "В каких случаях лучше использовать canvas и в каких svg?",
  "+-CanvasAndSvg": "Плюсы и минусы canvas и svg?",
  "autocompleteAttribute": "Для чего нужен атрибут autocomplete?",
  "outputInHTML": "Что такое элемент output в HTML5?",
  "valueAsNumber": "Что такое свойство valueAsNumber?",
  "targetAttribute": "Что такое атрибут target? Какие значения он принимает?",
  "applicationCacheInHTML": "Что такое ApplicationCache в HTML5?",
  "pictureElement": "Для чего используется элемент picture?",
  "srcset": "Что такое srcset? Как работает srcset?",
  "semanticallyNavigationMenu": "Как семантически верно сверстать навигационное меню?",
  "Iframe": "Что такое iframe?",
  "SubAndSupTags": "Для чего используются тэги sub и sup?",
  "hideMarkupElement": "Как можно скрыть элемент разметки не используя CSS и JS?",
  "meterAndProgress": "Разница между meter и progress?",
  "groupOptions": "Как можно сгруппировать опции внутри тэга select?",
  "changeShapeImage": "Как можно изменить форму картинки или HTML элемента?",
  "articleAndSection": "Чем отличается article от section?",
  "featuresStylingSvg": "Расскажите об особенностях стилизации svg?",
  "buttonAndLink": "Разница между кнопкой и ссылкой в HTML?",
  "decodingAttribute": "Для чего нужен атрибут decoding?",
  "enterkeyhintAttribute": "Для чего используется атрибут enterkeyhint?",
  "novalidateAttribute": "Для чего используют атрибут novalidate?",
  "inputmodeAttribute": "Для чего используется атрибут inputmode?",
  "patternAttribute": "Для чего используется атрибут pattern?",
  "UseSemanticTags": "Почему стоит использовать семантические теги в верстке?",
  "labelTag": "Для чего используется тэг label?",
  "waysToImprovePage": "Способы улучшения производительности веб-страницы при использовании HTML?",
  "attributesHTMLForms": "Основные атрибуты HTML-форм? Как они влияют на отправку данных с веб-страницы?",
  "HTMLElementsdToTables": "Какие HTML-элементы используются для создания и форматирования таблиц? Какие атрибуты у них есть?",
  "whatIsCSS": "Что такое CSS? И для чего он используется?",
  "CSSRule": "Что такое CSS-правило?",
  "waysAddCSS": "Варианты добавления CSS стилей на страницу?",
  "positioningCSS": "Типы позиционирования в CSS?",
  "CSSBoxModel": "Блочная модель CSS?",
  "selector": "Что такое селектор? И какие селекторы существуют?",
  "selectorSpecificity": "Что такое специфичность селектора? Как считать вес селектора?",
  "resetAndNormalize": "Разница между Reset.css и Normalize.css?",
  "marginAndPadding": "Разница между margin и padding?",
  "displayAndVisibility": "Разница между display: none и visibility: hidden?",
  "blockAndInline": "Разница между блочными и строчными (инлайновыми) элементами?",
  "classAndID": "Разница между классом и идентификатором в CSS?",
  "Sprite": "Что такое CSS спрайт? И для чего он используется?",
  "vendorPrefixes": "Что такое вендорные префиксы? И для чего они используются?",
  "pseudoElements": "Что такое псевдоэлементы? И для чего они используются?",
  "marginCollapsing": "Что такое схлопывание границ (margin collapsing)?",
  "preprocessor": "Что такое CSS препроцессор?",
  "zIndex": "Что такое z-index? Как формируется контекст наложения?",
  "orderElements": "Порядок наложения элементов в CSS (Stacking Order)?",
  "supportCSSProperty": "Как с помощью CSS определить, поддерживается ли свойство в браузере?",
  "supportPages": "Как поддерживать страницы в браузерах с ограниченными функциями?",
  "fixStylingDifferentBrowsers": "Как исправлять специфичные проблемы со стилями для разных браузеров?",
  "globalKeywords": "Глобальные ключевые слова в CSS?",
  "CSSAttributeAttr": "Что такое CSS-атрибут (attr)?",
  "SelectorList": "Что такое перечисление селекторов?",
  "currentColor": "Для чего используется ключевое слово currentColor в CSS?",
  "pseudoClassesInCSS3": "Какие псевдоклассы были добавлены в CSS3?",
  "filters": "Какие фильтры есть в CSS?",
  "invalidPseudoClass": "Для чего используется псевдокласс :invalid?",
  "displayProperty": "Расскажите про свойство display в CSS?",
  "translateOrAbsolutePositioning": "В каком случае лучше использовать translate() вместо абсолютного позиционирования?",
  "fFloatingElements": "Что такое плавающие элементы (floats)? Как они работают?",
  "textRendering": "Расскажите о свойстве text-rendering?",
  "textDecorationSkipInk": "Расскажите о свойстве text-decoration-skip-ink?",
  "pointerEvents": "Расскажите о свойстве pointer-events?",
  "outline": "Расскажите о свойстве outline?",
  "scrollbarGutter": "Расскажите о свойстве scrollbar-gutter?",
  "shorthandCSSProperties": "Почему не стоит использовать краткую запись свойств CSS?",
  "textHighlighting": "Назовите псевдоэлементы для подсветки текста?",
  "colorInCSS": "Способы задания цвета в CSS?",
  "propertiesForAnimations": "Какие CSS-свойства используются для создания анимаций и плавных переходов?",
  "principlesScalability": "Принципы и подходы для обеспечения масштабиельности и поддерживаемости CSS-кода?",
  "BEMMethodology": "Плюсы и минусы методологии БЭМ?",
  "CSSPreprocessors": "Какие CSS-препроцессоры вы знаете? Преимущества их использования?",
  "orderElementsOnPage": "Какое CSS-свойство используется для изменения порядка отображения элементов на веб-странице без изменения их физического расположения в HTML-коде?",
  "differencePseudoClassesAndPseudoElements": "Разница между псевдоклассами и псевдоэлементами?",
  "createStyleOnLargeProjects": "Как создавать и поддерживать единый стиль CSS на больших проектах?",
  "containerQueries": "Что такое 'контейнерные запросы' (container queries)? Как они отличаются от медиазапросов (media queries)?",
  "dataTypesJavaScript": "Типы данных в JavaScript?",
  "equality": "Разница между == и === (нестрогое/строгое равенство)?",
  "strictMode": "Что такое Strict mode в JavaScript?",
  "declarationAndExpression": "Разница между function declaration и function expression?",
  "nullAndUndefined": "Разница между null и undefined?",
  "typesOfTimers": "Типы таймеров в JavaScript?",
  "hoisting": "Что такое поднятие (Hoisting)?",
  "scope": "Что такое область видимости (Scope)?",
  "varLetAndConst": "Разница между var, let и const?",
  "closure": "Что такое замыкание (Closure)?",
  "thisInJavaScript": "Что обозначает this в JavaScript?",
  "higherOrderFunctions": "Что такое функции высшего порядка (Higher Order Functions)?",
  "convertToBoolean": "Как превратить любой тип данных в булевый? Перечислите ложные значения в JS?",
  "stringMethod": "Методы строк в JavaScript?",
  "arrayMethods": "Методы массивов в JavaScript?",
  "pureFunction": "Что такое чистая функция?",
  "forEachAndMap": "Разница между .forEach() и .map()?",
  "callApplyAndBind": "Разница между .call(), .apply() и bind()?",
  "functionsFirstClassObjects": "Почему в JS функции называют объектами первого класса?",
  "checkPropertyInObject": "Как определить наличие свойства в объекте?",
  "IIFE": "Что такое IIFE?",
  "pseudoArray": "Что такое псевдомассив arguments?",
  "hostObjectsAndNativeObjects": "Разница между host-объектами и нативными объектами?",
  "comparingTwoObjects": "Почему результат сравнения 2х объектов это false?",
  "prototypalInheritance": "Что такое прототипное наследование? Как создать объект без прототипа?",
  "extendingObjectsBadPractice": "Почему расширение нативных JavaScript-объектов это плохая практика?",
  "NaN": "Что такое NaN? Как определить, что значение равно NaN?",
  "wrapperObject": "Что такое объектная обертка (Wrapper Objects)?",
  "createObject": "Как в JavaScript создать объект?",
  "purposeNewKeyword": "Для чего используется ключевое слово new?",
  "logicalAndOrOperators": "Операторы «И» и «ИЛИ» (&& и ||)?",
  "doubleNegationOperator": "Для чего используется оператор двойного отрицания (!!)?",
  "remainderOperator": "Для чего используется оператор остатка (%)?",
  "valueIsAnArray": "Как проверить, является ли значение массивом?",
  "boxingUnboxing": "Как работает boxing/unboxing в JavaScript?",
  "memoization": "Что такое мемоизация? Реализуйте базовую логику функции для мемоизации?",
  "inAndHasOwnProperty": "Разница между оператором in и методом .hasOwnProperty()?",
  "deepAndShallowObjectCopies": "Разница между глубокой (deep) и поверхностной (shallow) копиями объекта? Как сделать каждую из них?",
  "methodChaining": "Что такое цепочка вызовов функций (chaining)? Как реализовать такой подход?",
  "undeclaredVariable": "Что такое необъявленная переменная?",
  "functionParametersPassedBy": "Как передаются параметры в функцию: по ссылке или по значению?",
  "prototypeObject": "Что такое прототип объекта в JavaScript?",
  "objectCreateMethod": "Как работает метод Object.create()?",
  "objectFreezeAndObjectSeal": "Разница между Object.freeze() и Object.seal()?",
  "sliceAndSplice": "Разница между методами .slice() и .splice()?",
  "findFindIndexAndIndexOf": "Как работают методы .find(), .findIndex() и .indexOf()?",
  "usingUseStrict": "Плюсы и минусы использования use strict?",
  "pushPopShiftUnshift": "Разница между методами .push(), .pop(), .shift() и .unshift()?",
  "immutability": "Плюсы и минусы иммутабельности? Как достичь иммутабельности в JS?",
  "popUpWindows": "Типы всплывающих окон в JavaScript?",
  "typesObjects": "Типы объектов JavaScript?",
  "programmingParadigms": "Парадигмы программирования в JavaScript?",
  "typesOfErrors": "Типы ошибок в JavaScript?",
  "typeofAndInstanceof": "Разница между typeof и instanceof?",
  "staticallyOrDynamicallyTyped": "JavaScript статически, или динамически типизированный язык?",
  "regularExpression": "Что такое регулярное выражение (Regular Expression)?",
  "recursion": "Что такое рекурсия?",
  "objectPrototype": "Что такое прототип (Prototype) объекта?",
  "methodsInRegularExpressions": "Какие методы используются в регулярных выражениях?",
  "polyfill": "Что такое полифил (polyfill)?",
  "switchCase": "Что такое switch/case? Правила использования switch/case?",
  "typesOfFunctions": "Типы функций по способности принимать другие функции?",
  "expressionsAndStatements": "Что такое выражения (expression) и инструкции (statement) в JavaScript?",
  "someAndEvery": "Разница между .some() и .every()?",
  "generateARandomNumber": "Как сгенерировать случайное число в JavaScript?",
  "typesOfOperators": "Типы операторов в JavaScript?",
  "functionParameterAndArgument": "Разница между параметром и аргументом функции?",
  "namingVariablesAndFunctions": "Правила задания имён для переменных и функций в JavaScript?",
  "explicitAndImplicitCoercion": "Разница между явным и неявным преобразованием (Implicit and Explicit Coercion)?",
  "arrayFrom": "Для чего применяется метод Array.from()?",
  "convertingAnArrayToObject": "Назовите способы преобразования массива в объект?",
  "oObjectAndMap": "Разница между Object и Map?",
  "currying": "Для чего используется каррирование?",
  "objectSeal": "Для чего используется метод Object.seal()?",
  "datasetProperty": "Для чего используется свойство .dataset?",
  "shareCode": "Каким образом можно обмениваться кодом между файлами?",
  "garbageCollector": "Как работает «сборщик мусора» в JavaScript?",
  "memoryLeaks": "Что такое утечки памяти?",
  "typesOfMemoryLeaks": "Назовите основные типы утечек памяти в JavaScript?",
  "executionContext": "Как работает контекст выполнения (execution context) в JavaScript?",
  "primitiveAndObject": "Разница между примитивом и объектом?",
  "maxCallStackSizeExceeded": "Что значит текст max call stack size exceeded в консоли?",
  "whatIsDOM": "Что такое DOM?",
  "typesOfDOMTreeNodes": "Типы узлов DOM-дерева?",
  "findElementsInDOM": "Методы поиска элементов в DOM?",
  "traverDOMTree": "Свойства для перемещения по DOM-дереву?",
  "attributeAndProperty": "Разница между attribute и property у DOM-элементов?",
  "BOM": "Что такое BOM?",
  "events": "Виды событий в JavaScript?",
  "addAnEventHandler": "Как добавить обработчик события на DOM-элемент?",
  "removeAnEventHandler": "Как удалить обработчик события с DOM-элемента?",
  "eEventPropagation": "Что такое распространение события (Event Propagation)?",
  "eEventDelegation": "Что такое делегирование событий (Event Delegation)?",
  "mediaQueries": "Как использовать media выражения в JavaScript?",
  "coordinatesInBrowser": "Расскажите про координаты в браузере?",
  "HTMLCollectionAndNodeList": "Разница между HTMLCollection и NodeList?",
  "addElementToPage": "Как динамически добавить элемент на HTML-страницу?",
  "featureAndUserAgent": "Разница между feature detection, feature inference и анализом строки user-agent?",
  "preventDefaultAndStopPropagation": "Разница между e.preventDefault() и e.stopPropagation()?",
  "eventTargetAndEventCurrentTarget": "Разница между event.target и event.currentTarget?",
  "stopPropagationAndStopImmediatePropagation": "Разница между .stopPropagation() и .stopImmediatePropagation()?",
  "loadAndDOMContentLoadedEvents": "Разница между событиями load и DOMContentLoaded?",
  "argumentsAddEventListener": "Сколько аргументов принимает addEventListener?",
  "innerHTMLAndOuterHTML": "Разница между innerHTML и outerHTML?",
  "JSONAndXML": "Разница между JSON и XML?",
  "usageEventPreventDefault": "Как узнать об использовании метода event.preventDefault()?",
  "purposeWindowNavigatory": "Для чего используется свойство window.navigator?",
  "purposeFocus": "Для чего используется метод .focus()?",
  "formsProperty": "Для чего используется свойство .forms?",
  "scrollIntoView": "Для чего используется метод .scrollIntoView()?",
  "submitAndRequestSubmit": "Разница между методами .submit() и .requestSubmit()?",
  "intersectionObserver": "Расскажите о IntersectionObserver?",
  "URLSearchParams": "Расскажите о URLSearchParams?",
  "limitationsWindowClose": "Какие есть ограничения у window.close()?",
  "synchronousAndAsynchronousFunctions": "Разница между синхронными и асинхронными функциями?",
  "AJAX": "Что такое AJAX?",
  "sameOriginPolicy": "Что такое same-origin policy в контексте JavaScript?",
  "eventLoop": "Что такое цикл событий (event loop) и как он работает?",
  "microtasksAndMacrotasks": "Разница между микро и макрозадачами в event loop?",
  "queueMicrotask": "Расскажите о queueMicrotask?",
  "promises": "Что такое промисы (Promises)?",
  "+-Ajax": "Плюсы и минусы использования Ajax?",
  "workingAsynchronousCode": "Подходы при работе с асинхронным кодом?",
  "promisesOverCallbacks": "Преимущества использовании промисов вместо колбэков?",
  "callbackFunction": "Что такое callback-функция? Что такое Callback Hell?",
  "asyncAwait": "Что такое async/await?",
  "promiseAllPromiseAnyPromiseRace": "Разница между Promise.all(), Promise.any() и Promise.race()?",
  "allSettled": "Расскажите про статический метод .allSettled()?",
  "asynchronousProgramming": "Плюсы и минусы асинхронного программирования в JavaScript?",
  "issuesWithCallback": "Проблемы при использовании callback-функций?",
  "multipleAsynchronousOperations": "Как выполнить несколько асинхронных операций последовательно?",
  "problemsIncorrectUseAsynchrony": "Какие проблемы может вызвать неправильное использование асинхронности в JavaScript?",
  "ECMAScript": "Что такое ECMAScript? В чём отличие от JavaScript?",
  "letConstVar": "Разница между let, const и var?",
  "changeValueConst": "Можно ли изменить значение, определённое через const?",
  "temporalDeadZone": "Что такое временная мёртвая зона (temporal dead zone)?",
  "restAndSpreadOperators": "Разница между Rest и Spread операторами?",
  "destructuring": "Что такое деструктуризация?",
  "forOfLoop": "Для чего используется цикл for…of?",
  "templateLiterals": "Что такое шаблонные литералы (Template Literals)?",
  "setMapWeakMapWeakSet": "Что такое Set, Map, WeakMap и WeakSet?",
  "regularAndArrowFunctions": "Разница между обычными функциями и стрелочными?",
  "objectFreezeAndConst": "Разница между методом Object.freeze() и const?",
  "iterators": "Что такое итераторы?",
  "generators": "Что такое генераторы? Когда стоит использовать генераторы?",
  "ES6Modules": "Что такое ES6 модули?",
  "symbolInES6": "Что такое символ (Symbol) в ES6?",
  "Includes": "Для чего используется метод .includes()?",
  "getOwnPropertyDescriptors": "Для чего используется метод .getOwnPropertyDescriptors()?",
  "keysValuesAndEntries": "Расскажите о методах .keys(), .values(), .entries()?",
  "fromEntries": "Для чего используется метод .fromEntries()?",
  "flatAndFlatMap": "Для чего используются методы .flat() и .flatMap()?",
  "padStartAndPadEnd": "Для чего используются методы .padStart() и .padEnd()?",
  "startsWithAndEndsWith": "Разница между методами .startsWith() и .endsWith()?",
  "removeWhitespace": "Как в JavaScript удалять пробельные символы в начале и в конце строки?",
  "optionalChainingOperator": "Расскажите об операторе Optional Chaining (?.)?",
  "replaceAll": "Для чего используется метод .replaceAll()?",
  "assignmentOperator": "Что такое оператор логического присваивания?",
  "mproveReadabilityLargeNumbers": "Как увеличить читаемость больших чисел?",
  "privateAccessors": "Что такое приватные аксессоры?",
  "ES6ClassesAndConstructor": "Разница между ES6-классами и конструкторами функций?",
  "nullishCoalescing": "Что такое оператор нулевого слияния (??)?",
  "nullishCoalescingAndLogicalOr": "В чём отличие оператора нулевого слияния (??) и оператора “ИЛИ” (||)?",
  "mapCollection": "Основные методы и свойства работы с коллекцией Map",
  "setCollection": "Основные методы и свойства работы с коллекцией Set",
  "iterateMapAndSet": "Как осуществить перебор элементов в коллекциях Map и Set?",
  "typeScript": "Что такое TypeScript?",
  "componentsTS": "Основные компоненты TypeScript?",
  "featuresTS": "Назовите особенности TypeScript?",
  "+TS": "Плюсы использования TypeScript?",
  "-TS": "Минусы использования TypeScript?",
  "typesTS": "Типы в TypeScript?",
  "decorators": "Что такое декораторы?",
  "functionOverloading": "Поддерживает ли TypeScript перегрузку функций?",
  "typeAndInterface": "Разница между типом (type) и интерфейсом (interface)?",
  "JSXInTS": "Что такое JSX в TypeScript? Какие режимы JSX поддерживает TypeScript?",
  "tripleSlashDirectives": "Что такое директивы с тремя наклонными чертами (Triple-Slash Directives), их типы?",
  "ambientDeclarations": "Что такое внешние объявления переменных (ambient declaration) в TypeScript?",
  "abstractClassAndInterface": "Разница между абстрактным классом (abstract class) и интерфейсом (interface)?",
  "OOPInTS": "Какие элементы ООП поддерживаются в TypeScript?",
  "modifiers": "Модификаторы доступа в TypeScript?",
  "internalAndExternalModules": "Разница между внутренним (Internal Module) и внешним модулями (External Module)?",
  "decoratorsInTS": "Что такое декораторы в TypeScript?",
  "howDoesTypeScriptSupportOptionalAndDefaultFunctionParameters": "Как TypeScript поддерживает необязательные и дефолтные параметры в функции?",
  "whatIsEnum": "Что такое перечисление (enum)?",
  "noImplicit": "Для чего в TypeScript используется NoImplicitAny?",
  "unionAndIntersection": "Разница между типами 'Объединение' (|) и 'Пересечение' (&)?",
  "generic": "Что такое общие типы (generic) в TypeScript?",
  "scopesTS": "Какие области видимости доступны в TypeScript?",
  "mapFile": "Что такое .map файл, как и зачем его использовать?",
  "TSInServer": "Можно ли использовать TypeScript в серверной разработке?",
  "declareKeyword": "Для чего в TypeScript используют ключевое слово 'declare'?",
  "voidNeverAndUnknown": "Разница между типами 'void', 'never' и 'unknown'?",
  "catchErrorsTS": "Как вы отлавливаете ошибки в TypeScript коде?",
  "progressiveRendering": "Что такое прогрессивный рендеринг?",
  "progressiveSSR": "Что такое прогрессивный SSR?",
  "PWA": "Что такое Progressive Web Application (PWA)?",
  "crossBrowser": "Что такое кроссбраузерность?",
  "OSIModel": "Что такое OSI модель?",
  "documentObject": "Что такое поток документа?",
  "adaptiveAndResponsive": "Разница между адаптивным (adaptive) и отзывчивым (responsive) дизайнами?",
  "progressiveEnhancementAndGracefulDegradation": "Разница между Progressive Enhancement и Graceful Degradation?",
  "webComponents": "Что такое Веб-компоненты и какие технологии в них используются?",
  "multilingualWebsites": "Особенности разработки мультиязычных сайтов?",
  "REST": "Что такое REST?",
  "RESTAndRESTfulAPI": "Что такое REST и RESTful api?",
  "RESTArchitecture": "Принципы REST-архитектуры?",
  "richardsonMaturityModel": "Что такое модель зрелости Ричардсона?",
  "levelsRichardsonMaturityModel": "Основные уровни модели зрелости Ричардсона?",
  "criticalRenderingPathSteps": "Назовите критические этапы рендеринга?",
  "layoutPaintingAndCompositing": "Разница между layout, painting и compositing?",
  "flashUnstyledContent": "Что такое Flash Of Unstyled Content (FOUC)? Как его избежать?",
  "historyAPI": "Что такое History API в браузере?",
  "webStorage": "Что такое веб-хранилище (web storage)?",
  "cookieSessionStorageAndLocalStorage": "Разница между cookie, sessionStorage и localStorage?",
  "reducePageLoadTimes": "Способы уменьшения времени загрузки веб-страницы?",
  "coreWebVitals": "Что такое Core Web Vitals? Какие основные метрики туда входят?",
  "coreWebVitalsMetrics": "Расскажите о метриках Core Web Vitals?",
  "preloadPrefetchPreconnectAndPrerender": "Разница между preload, prefetch, preconnect и prerender?",
  "PRPLPattern": "Для чего нужен паттерн PRPL?",
  "whatIsHTTP": "Что такое HTTP?",
  "HTTPRequest": "Из чего состоит HTTP-запрос?",
  "methodsHTTPRequest": "Какие методы может иметь HTTP-запрос?",
  "HTTPCookie": "Что такое HTTP cookie? Для чего они используются?",
  "HTTPAndHTTPS": "Разница между HTTP и HTTPS?",
  "HTTP1AndHTTP2": "Разница между HTTP/1 и HTTP/2?",
  "multiplexingInHTTP2": "Как работает мультиплексирование в HTTP/2?",
  "tripleHandshake": "Что такое 'трехстороннее рукопожатие' (Triple handshake)?",
  "PUTAndPOSTRequests": "Разница между PUT- и POST-запросами?",
  "TCPAndUDPProtocols": "Разница между протоколами TCP и UDP?",
  "webSocket": "Что такое WebSocket? В чем принцип его работы?",
  "LongPollingWebsocketsAndServerSentEvents": "Разница между Long-Polling, Websockets и Server-Sent Events?",
  "JSONP": "Как работает JSONP?",
  "indexedDB": "Что такое IndexedDB в браузере? Преимущества IndexedDB?",
  "serviceWorkers": "Что такое Service Workers?",
  "webWorkers": "Что такое Web Workers?",
  "webWorklet": "Что такое Web Worklet?",
  "SSLTLS": "Что такое SSL/TLS? Зачем они используются в веб-разработке?",
  "sessionClientAndServer": "Механизм устанавливки сеанса между клиентом и сервером?",
  "API": "Что такое API?",
  "CDN": "Что такое CDN?",
  "IPAddress": "Что такое IP-адрес?",
  "HostAndDomain": "Разница между host и domain?",
  "URIAndURL": "Разница между URI и URL?",
  "clearingCache": "Почему очищать кэш важно? Как это можно сделать?",
  "identificationAuthenticationAndAuthorization": "Разница между идентификацией, аутентификацией и авторизацией?",
  "typesAuthentication": "Виды аутентификации?",
  "secureAndHttpOnlyCookies": "Что такое безопасные (Secure) и HttpOnly cookies?",
  "contentSecurityPolicy": "Что такое Content Security Policy (CSP)?",
  "CORS": "Что такое CORS?",
  "crossSiteScripting": "Что такое межсайтовый скриптинг (XSS)?",
  "methodsApplicationSecurity": "Методы повышения безопасности веб-приложений?",
  "OWASPTop10": "Что такое OWASP Top 10?",
  "principlesOfOOP": "Основные принципы ООП?",
  "SOLID": "Что такое SOLID?",
  "classAndPrototypalInheritance": "Разница между классовым и прототипным наследованием?",
  "dataFlow": "Однонаправленный поток данных и двусторонняя связь данных? В чем между ними разница?",
  "functionalProgramming": "Что такое функциональное программирование?",
  "MVC": "Что такое MVC?",
  "MVVM": "Что такое MVVM?",
  "MVP": "Что такое MVP?",
  "drawbacksMVWPattern": "Недостатки паттерна MVW?",
  "fFunctionAndAMethod": "Разница между функцией и методом?",
  "whatIsCurrying": "Что такое каррирование (Currying)?",
  "OOPAndFP": "Разница между ООП и ФП в JavaScript?",
  "+-OfFPAndOOP": "Плюсы и минусы ФП и ООП?",
  "monolithicAndMicroservicesArchitectures": "Разница между монолитной и микросервисной архитектурами?",
  "+-monolithicAndMicroservicesArchitectures": "Плюсы и минусы монолитной и микросервисной архитектур?",
  "principlesInheritance": "Какие принципы можно использовать вместе с наследованием?",
  "principlesBesidesSOLID": "Какие ещё принципы кроме SOLID вы знаете?",
  "pbjectPropertyDescriptors": "Что такое дескрипторы свойств объектов?",
  "gettersAndSetters": "В чем заключаются особенности геттеров и сеттеров?",
  "staticClassMethod": "Что такое статический метод класса (static)? Как осуществляется его вызов?",
  "compositionAndInheritance": "Разница между композицией и наследованием?",
  "composition": "Что такое композиция в контексте JavaScript?",
  "designPattern": "Что такое паттерн, или шаблон проектирования?",
  "typesDesignPatterns": "Типы паттернов?",
  "GOFPatterns": "Что такое GOF паттерны?",
  "GRASPPatterns": "Что такое GRASP паттерны?",
  "typesPolymorphism": "Типы полиморфизма?",
  "abstractClass": "Можно ли в JavaScript реализовать абстрактный класс и как это сделать?",
  "prototypeMechanism": "Как работает механизм прототипов в JavaScript?",
  "principlesFunctionalProgramming": "Основные принципы функционального программирования?",
  "prosFunctionalProgramming": "Плюсы функционального программирования?",
  "imperativeAndDeclarativeProgramming": "Разница между императивным и декларативным подходами программирования?",
  "reactiveProgramming": "Что такое реактивное программирование?",
  "+-reactiveProgramming": "Плюсы и минусы реактивного программирования?",
  "inversionOfControl": "Что такое Inversion of control?",
  "dependencyInjection": "Что такое Dependency injection?",
  "aggregationAndComposition": "Разница между агрегацией и композицией?",
  "proceduralAndFunctionalProgramming": "Разница между процедурным и функциональным программированием?",
  "WCAG": "Что такое WCAG?",
  "principlesOfAccessibility": "Основные принципы доступности",
  "screenReader": "Что такое скринридер?",
  "accessibilityLevels": "Уровни доступности",
  "hideContentFromScreenReaders": "Как скрыть содержимое от скринридеров?",
  "removeSemantics": "Как удалить семантику у элемента?",
  "ARIARoles": "Что такое ARIA роли в веб-приложении?",
  "ariaRoledescription": "Для чего используется атрибут aria-roledescription?",
  "HTMLAttributesAccessibility": "Какие HTML атрибуты можно использовать для улучшения доступности?",
  "accessibilityTestingTools": "Назовите средства и методы тестирования доступности",
  "accessibilityStandards": "Какие стандарты доступности следует учитывать при разработке?",
  "usabilityAndAccessibility": "Разница между usability и accessibility",
  "developingAccessibleWebsite": "Что нужно учитывать при разработке доступного сайта?",
  "whatIsReact": "Что такое React?",
  "benefitsReact": "Какие основные преимущества его использования в веб-разработке?",
  "featuresReact": "Перечислите особенности React.",
  "componentsReact": "Что такое компоненты в React? Как создать функциональный и классовый компонент?",
  "virtualDOM": "Что такое Virtual DOM в React? Какие преимущества он предоставляет при обновлении интерфейса?",
  "kKeyAttribute": "Для чего нужен атрибут key при рендере списков?",
  "pureComponent": "Что такое PureComponent?",
  "higherOrderComponents": "Что такое Компонент высшего порядка (Higher-Order Component/HOC)? Какие задачи они решают?",
  "controlledAndUncontrolledComponents": "Разница между управляемыми (controlled) и не управляемыми (uncontrolled) компонентами?",
  "cmponentLifecycle": "Что такое жизненный цикл компонента (component lifecycle) в React?",
  "lifecycleMethods": "Методы жизненного цикла компонента в React?",
  "stagesComponentLifecycle": "Стадии жизненного цикла компонента в React?",
  "methodsHandleEvents": "Какие методы можно использовать для обработки событий в React?",
  "reactReconciliation": "Что такое React Reconciliation?",
  "portal": "Что такое портал (Portal)?",
  "context": "Что такое контекст (Context) в React и для чего он используется?",
  "reactHooks": "Что такое React хуки (Hooks), какие хуки вы знаете и для чего они используются?",
  "JSX": "Что такое JSX?",
  "stateAndProps": "Разница между состоянием (state) и пропсами (props)? Как они используются?",
  "assDataToChildComponent": "Как передать данные от родительского компонента к дочернему компоненту в React?",
  "stateManagement": "Как работает управление состоянием (state management) в больших React-приложениях? Назовите библиотеки или подходы, которые вы использовали.",
  "reactFiber": "Что такое React Fiber?",
  "fragment": "Что такое фрагмент (Fragment)? Почему фрагмент лучше, чем div?",
  "reactRef": "Что такое React-ссылка (ref)? Как создать ссылку?",
  "shadowDOMAndVirtualDOM": "Разница между теневым (Shadow) и виртуальным (Virtual) DOM?",
  "advantagesUsingReact": "Назовите преимущества использования React?",
  "conditionalRendering": "Что такое условный рендеринг (Conditional Rendering)? Как его выполнить?",
  "switchingComponent": "Что такое компонент-переключатель (Switching Component)?",
  "reactAndReactDOM": "Разница между React и ReactDOM?",
  "componentAndContainer": "Разница между компонентом и контейнером?",
  "restrictUseProp": "Как React обрабатывает, или ограничивает использование пропсов определенного типа?",
  "strictModeReact": "Что такое строгий режим в React? Его преимущества?",
  "propDrilling": "Что такое «бурение пропсов» (Prop Drilling)? Как его избежать?",
  "pollingReact": "Что такое «опрос» (Polling)? Как его реализовать в React?",
  "elementAndComponent": "Разница между элементом и компонентом?",
  "reactDOMServer": "Что такое ReactDOMServer?",
  "errorBoundaries": "Что такое предохранители (Error Boundaries)?",
  "lazyFunction": "Что такое «ленивая» (Lazy) функция?",
  "renderingAndMounting": "Разница между рендерингом и монтированием?",
  "childrenInReact": "Что такое сhildren?",
  "pointerEventsInReact": "Что такое события указателя (Pointer Events)?",
  "inheritanceInversion": "Что такое инверсия наследования (Inheritance Inversion)?",
  "twoWayDataBinding": "Как в React реализовать двустороннее связывание данных?",
  "classComponentsAndFunctionalComponents": "Разница между классовым и функциональным компонентами?",
  "useEffectAndComponentDidMount": "Разница между useEffect() и componentDidMount()?",
  "advantagesOfHooks": "Преимущества хуков?",
  "disadvantagesHooks": "Недостатки хуков?",
  "rulesUsingHooks": "Правила (ограничения) использования хуков?",
  "liftingStateUp": "Что такое поднятие состояния вверх (Lifting State Up)?",
  "shouldComponentUpdate": "Что делает метод shouldComponentUpdate?",
  "createElementAndCloneElement": "Разница между createElement() и cloneElement()?",
  "useReducer": "Что такое useReducer()?",
  "initialRender": "Как реализовать однократное выполнение операции при начальном рендеринге?",
  "distributedComponent": "Что такое распределенный компонент?",
  "useCallbackUseMemo": "Расскажите о хуках useCallback(), useMemo(), useImperativeHandle(), useLayoutEffect()?",
  "renderHTML": "Как отрендерить HTML код в React-компоненте?",
  "functionUsingSetState": "Зачем в setState() нужно передавать функцию?",
  "registerServiceWorker": "Для чего предназначен метод registerServiceWorker() в React?",
  "routingAReact": "Как организовать маршрутизацию (routing) в React-приложении?",
  "librariesRouting": "Какие библиотеки или инструменты для маршрутизации вы использовали?",
  "reactRouterAndRegularRouting": "Чем React Router отличается от обычной маршрутизации?",
  "newHooksVersion5": "Какие хуки были добавлены в React Router версии 5?",
  "propsReactRouter": "Как передавать пропсы в React Router?",
  "reselect": "Что такое Reselect и как он работает?",
  "goalReactFiber": "Назовите основную цель React Fiber?",
  "return": "Какие типы данных может возвращать render()?",
  "memoAndUseMemo": "Разница между memo и useMemo?",
  "syntheticEvents": "Что такое синтетические события (SyntheticEvent) в React?",
  "isReactReactive": "Является ли React реактивным?",
  "optimizationReact": "Техники оптимизации перфоманса React?",
  "bestPracticesReact": "Лучшие практики безопасности в React?",
  "toolsAndLibrariesTestingReact": "Какие инструменты и библиотеки для тестирования React-компонентов вы использовали?",
  "principlesTestingReact": "Какие принципы тестирования React-приложений вы соблюдаете?",
  "whatIsVue": "Что такое Vue.js?",
  "featuresVue": "Перечислите особенности Vue.js.",
  "zdvantagesVue": "Перечислите преимущества Vue.js.",
  "componentLifecycleVue": "Назовите хуки жизненного цикла компонента во Vue.js?",
  "describeComponentLifecycleVue": "Опишите жизненный цикл компонента во Vue.js?",
  "conditionalDirectivesVue": "Что такое условные директивы (conditional directives)?",
  "showAndVIfDirectives": "Разница между директивами v-show и v-if?",
  "computedProperties": "Что такое вычисляемые свойства?",
  "eventModifiersVue": "Какие модификаторы событий предоставляет Vue.js?",
  "buttonModifiersVue": "Какие модификаторы кнопок предоставляет Vue.js?",
  "mouseButtonModifiersVue": "Какие модификаторы кнопок мыши предоставляет Vue.js?",
  "componentVue": "Что такое компонент?",
  "propsTypesVue": "Что такое пропсы? Типы пропсов?",
  "localAndGlobalComponentRegistration": "Разница между локальной и глобальной регистрацией компонента?",
  "mixinsVue": "Что такое миксины Vue.js?",
  "vueCLI": "Что такое Vue CLI?",
  "vuex": "Что такое Vuex?",
  "reactAndVueHave": "Что общего у React и Vue.js?",
  "differenceReactAndVue": "Разница между React и Vue.js?",
  "differenceAngularAndVue": "Разница между Angular и Vue.js?",
  "SFC": "Что такое SFC? Какие проблемы он решает?",
  "reactivityVue2AndVue3": "Как реализована реактивность во Vue2 и Vue3?",
  "vueRouters": "Что такое Vue Router? Назовите его особенности?",
  "nestedRoutesVue": "Что такое вложенные роуты (Routes)?",
  "filtersVue": "Что такое фильтры? Как создать цепочку фильтров?",
  "componentCommunicationVue": "Перечислите варианты коммуникации компонентов во Vue.js?",
  "modifiersVModel": "Какие модификаторы поддерживаются в модели (v-model)?",
  "pluginsVue": "Что такое плагины? Какие возможности дают плагины для Vue.js?",
  "slotVue": "Что такое слот (slot) во Vue.js?",
  "hooksByDirectives": "Какие хуки предоставляют директивы?",
  "directiveHookArguments": "Что такое аргументы директивных хуков?",
  "vueLoader": "Что такое vue-loader?",
  "renderFunctionVue": "Что такое рендер-функция (render function)? Преимущества рендер-функции?",
  "keepAliveComponentsVue": "Что такое динамические (keep-alive) компоненты?",
  "asynchronousComponentsVue": "Что такое асинхронные компоненты?",
  "whatIsAngular": "Что такое Angular?",
  "differenceAngularJSAndAngular": "Разница между AngularJS и Angular?",
  "angularComponentLifecycle": "Методы жизненного цикла Angular компонента?",
  "constructorAndNgOnInit": "Разница между constructor и ngOnInit?",
  "dataBindingAngular": "Что такое Data Binding в Angular?",
  "AOTAndJIT": "Разница между AOT и JIT?",
  "changeDetection": "Что такое Change Detection, как работает механизм Change Detection?",
  "NgZone": "Что такое ngZone?",
  "changeDetectionAngular": "Стратегии обнаружения изменений в Angular?",
  "+UsingAngular": "Назовите плюсы использования Angular?",
  "-UsingAngular": "Назовите минусы использования Angular?",
  "dependencyInjectionAngular": "Что такое внедрение зависимостей в Angular?",
  "directivesAngular": "Что такое директивы в Angular?",
  "ngTemplateNgContainerAndNgContent": "Для чего нужны директивы ng-template, ng-container, ng-content?",
  "dynamicComponentsAngular": "Что такое динамические компоненты в Angular?",
  "renderDynamicComponent": "Назовите последовательность действий для отображения динамического компонента?",
  "formsDataBindingAngular": "Основные формы привязки данных в Angular?",
  "loadingAngular": "Типы стратегий загрузки в Angular?",
  "routingAngular": "Что такое роутинг и как его создать в Angular?",
  "interpolationAngular": "Что такое интерполяция в Angular?",
  "angularRoutersLifecycle": "Жизненный цикл в Angular Router?",
  "routerModuleForRoot": "Разница между RouterModule.forRoot() и RouterModule.forChild()?",
  "ngrxStore": "Когда нужно использовать ngrx/store?",
  "smartAndPresentationalComponents": "Разница между умными и презентационными компонентами?",
  "viewChildAndContentChild": "Разница между @ViewChild() и @ContentChild()?",
  "templateVariable": "Что такое template variable? Как ее использовать?",
  "viewEncapsulation": "Что такое View Encapsulation?",
  "storeDataAngular": "Как можно хранить данные в Angular?",
  "templateDrivenAndReactiveForms": "Когда нужно использовать стандартные (template driven) и реактивные (reactive) формы?",
  "serviceIntoApplication": "Как внедрить сервис в Angular приложение?",
  "performanceApplication": "Как улучшить производительность Angular приложения?",
  "componentAndAModuleInAngular": "Разница между компонентом и модулем в Angular?",
  "protectComponent": "Как защитить компонент активируемый через роутер?",
  "promiseAndObservableAngular": "Разница между Promise и Observable в Angular?",
  "declarationsProvidersAndImportsNgModule": "Разница между declarations, providers и import в NgModule?",
  "reactiveProgrammingAngular": "Что такое реактивное программирование? Как оно используется в Angular?",
  "securityAngular": "Лучшие практики безопасности в Angular?",
  "behaviorSubjectAndObservable": "Разница между BehaviorSubject и Observable?",
  "ngZoneService": "Приведите хороший пример использования NgZone сервиса?",
  "componentErrorMessages": "Как сделать компонент для показа сообщений об ошибках?",
  "passDataToParentComponent": "Как передать данные из дочернего компонента в родительский?",
  "ngFormFormGroupAndFormControl": "Разница между NgForm, FormGroup и FormControl?",
  "sharedModule": "Что такое Shared модуль?",
  "iImportingServiceBad": "Почему импортировать сервис из SharedModule в lazy loaded модуль считается плохой практикой?",
  "switchMapConcatMapAndMergeMap": "Разница между switchMap, concatMap и mergeMap?",
  "behaviorSubjectReplaySubjectAndAsyncSubject": "Разница между BehaviorSubject, ReplaySubject и AsyncSubject?",
  "changeDetectionStrategy": "Принцип работы ChangeDetectionStrategy.onPush?",
  "pipeAngular": "Что такое пайп (pipe) в Angular? Разница между чистыми и нечистыми пайпами?",
  "componentsAngular": "Назовите ключевые компоненты Angular?",
  "componentAndDirective": "Разница между компонентом и директивой?",
  "HttpClient": "Что такое HttpClient, перечислите его преимущества?",
  "customElement": "Что такое пользовательский элемент (Custom Element)? Как он работает?",
  "transformAngularIntoCustomElements": "Как трансформировать Angular-компоненты в пользовательские элементы?",
  "advantagesAOT": "Преимущества использования AOT компиляции?",
  "advantagesUsingServiceWorkers": "Преимущества использования сервис-воркеров в Angular приложении?",
  "pPlatformAngular": "Что такое платформа в Angular?",
  "ngForDirectiveWithTrackBy": "Для чего используется связка ngFor и trackBy?",
  "whatIsRedux": "Что такое Redux и какие основные преимущества его использования в управлении состоянием в React-приложениях?",
  "fundamentalConceptsRedux": "Какие основные концепции существуют в Redux и как они связаны между собой (Store, Actions, Reducers)?",
  "storeRedux": "Что представляет собой хранилище (Store) в Redux? Какие методы и свойства хранилища вы знаете?",
  "actionRedux": "Как создать действие (Action) в Redux? Какие типы действий могут существовать?",
  "updatingStateRedux": "Какие методы для обновления состояния существуют в Redux? Как работает диспетчер (Dispatcher)?",
  "synchronousAndAsynchronousRedux": "В чем разница между синхронными и асинхронными действиями в Redux?",
  "reducerRedux": "Что такое редюсер (Reducer) в Redux и какой его основной принцип работы?",
  "multipleReducers": "Как организовать комбинирование нескольких редюсеров в один корневой редюсер?",
  "librariesRedux": "Какие библиотеки или инструменты для работы с Redux вы использовали (например, Redux Thunk, Redux Saga, Reselect)?",
  "selectorsRedux": "Что такое селекторы (Selectors) в Redux и для чего они используются?",
  "connectingRedux": "Какие методы для подключения Redux к React-приложению вы знаете (например, connect из react-redux)?",
  "middlewareRedux": "Что такое middleware в Redux и для чего они могут быть использованы? Упомяните некоторые сторонние middleware для Redux.",
  "handleAsynchronousRedux": "Как обрабатывать асинхронные операции в Redux-приложении? Какие подходы к асинхронности вы предпочитаете?",
  "globalSettingsRedux": "Как организовать хранение и обработку глобальных настроек или данных в Redux?",
  "debuggingRedux": "Какие методы для отладки Redux-приложений вы используете? Упомяните инструменты или расширения для браузеров.",
  "whatIsReduxToolkit": "Что такое Redux Toolkit и какие основные преимущества его использования по сравнению с чистым Redux?",
  "toolsToolkit": "Какие ключевые функции и инструменты предоставляет Redux Toolkit для упрощения работы с Redux?",
  "storeToolkit": "Как создать хранилище (Store) с использованием Redux Toolkit? Какие функции и методы для этого предоставляются?",
  "slicesToolkit": "Что такое срезы (Slices) в Redux Toolkit и для чего они используются? Как создать срез?",
  "toolkitActions": "Какие методы в Redux Toolkit позволяют создавать действия (Actions) и редюсеры (Reducers) с более компактным синтаксисом?",
  "handleAsynchronousToolkit": "Как организовать асинхронные операции с использованием Redux Toolkit? Какой middleware часто используется с ним?",
  "toolkitUniqueIdentifiers": "Каким образом Redux Toolkit управляет созданием уникальных идентификаторов для действий и редюсеров?",
  "toolkitUpdateState": "Какие методы в Redux Toolkit позволяют обновлять состояние (state) с минимальной боли?",
  "selectorGenerationToolkit": "Какие преимущества приносит автоматическое создание селекторов (Selectors) с использованием Redux Toolkit?",
  "codeServerToolkit": "Как организовать код с использованием 'данных на стороне сервера' (Server-Driven Data) с Redux Toolkit?",
  "performanceToolkit": "Как можно управлять и мониторить производительность при использовании Redux Toolkit? Какие инструменты или подходы вы знаете?",
  "reduxToolkitAndReduxToolkitQuery": "В чем состоит разница между Redux Toolkit и Redux Toolkit Query? Какой подход предпочтительнее в каких ситуациях?",
  "patternsToolkit": "Какие структуры и шаблоны проекта вы используете с Redux Toolkit для организации кода?",
  "toolkitCompatibilityOtherLibraries": "Как обеспечивается совместимость Redux Toolkit с другими библиотеками или инструментами в экосистеме React и Redux?",
  "bestPracticesToolkit": "Какие есть лучшие практики и советы по использованию Redux Toolkit в больших и сложных приложениях?"
}
