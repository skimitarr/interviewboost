{
  "add": "Додати",
  "addComment": "Додати коментар",
  "cancel": "Скасувати",
  "chooseDirection": "Виберіть напрям, а потім запитання",
  "comment": "Коментар",
  "comingSoon": "Незабаром",
  "downloadReport": "Завантажити звіт",
  "enterName": "Введіть ім'я претендента",
  "feedback": "Зворотній зв'язок",
  "generalFeedback": "Загальний висновок",
  "generatingReport": "Будь ласка, зачекайте, генерую звіт",
  "goToReport": "Перейти до звіту",
  "home": "Додому",
  "interview": "Співбесіда",
  "letsGetStarted": "Почнемо",
  "listTechnologies": "Список технологій і запитань для проведення співбесіди в 2023 році",
  "logInYourAccount": "Увійдіть до свого облікового запису",
  "logOut": "Вийти",
  "questions": "Питання",
  "questionsFor": "Питання для",
  "rating": "Оцінка",
  "report": "Звіт",
  "reports": "Звіти",
  "rateAnswerFrom0To100": "Оцініть відповідь від 0 до 100",
  "reportsHistory": "Історія звітів",
  "save": "Зберегти",
  "sendFeedback": "Надіслати відгук або повідомити про помилку",
  "selectAll": "Вибрати все",
  "selectSpecialization": "Для початку вам необхідно вибрати спеціалізацію",
  "selectATechnologyStack": "Виберіть стек технологій",
  "send": "Надіслати",
  "signIn": "Увійти",
  "signInWithGitHub": "Увійти через GitHub",
  "signInWithGoogle": "Увійти через Google",
  "total": "Загалом",

  "position": "Посада",
  "prepare": "Готуйтеся легко і швидко",
  "evaluate": "Об'єктивно оцінюйте кандидатів і приймайте правильне рішення.",
  "tool": "Інструмент для оптимізації інтерв'ю для кандидатів у IT. Готуйтеся легко і швидко, об'єктивно оцінюйте кандидатів і приймайте правильне рішення.",
  "startFree": "Почати безкоштовно",
  "receive1": "Отримайте ",
  "receive2": "докладний аналіз ",
  "receive3": "результатів кандидата після інтерв'ю.",
  "startProfession": "Почніть з вибору професії кандидата",
  "selectCandidate": "Виберіть професію кандидата для оцінки.",
  "selectList": "Виберіть список технологій",
  "thenSelectList": "Потім виберіть список технологій для оцінки.",
  "addQuestions": "Додайте питання",
  "addInterview": "Додайте свої питання для інтерв'ю і складіть список.",
  "evaluateAnswers": "Оцініть відповіді кандидата",
  "evaluateResponses": "Оцініть відповіді кандидата та робіть необхідні примітки під час інтерв'ю.",
  "detailedReport": "Детальний звіт",
  "conclude": "Упевнено завершіть процес найму, озброєні детальними звітами для кожного кандидата.",
  "what1": "Для чого",
  "what2": "Interviewboost",
  "what3": "призначений?",
  "smartSolution": "Це розумне рішення, яке допомагає інтерв'юерам ефективно готуватися до інтерв'ю з кандидатами у IT.",
  "selectProfession": "Легко вибирайте професію, технології та питання, які ви хочете використовувати на інтерв'ю. Під час інтерв'ю оцінюйте відповіді кандидатів та залишайте коментарі.",
  "generateScoreReport": "В кінці інтерв'ю створюйте докладний звіт оцінки, створений штучним інтелектом.",
  "benefits": "Переваги",
  "timeSaving": "Економія часу",
  "prepareReports": "Готуйте та створюйте звіти швидко",
  "improvedDecision": "Покращене прийняття рішень",
  "gatherInformation": "Збирайте всю необхідну інформацію для обґрунтованих рішень.",
  "personalisation": "Персоналізація",
  "tailorQuestions": "Обирайте питання та техніки для кожного кандидата.",
  "flexible": "Гнучкість",
  "suitable": "Підходить для інтерв'юерів з різним досвідом.",
  "artificialIntelligence": "Штучний інтелект",
  "reportsGenerated": "Звіти генеруються штучним інтелектом для максимальної об'єктивності.",
  "who1": "Для кого",
  "who2": "цей продукт",
  "who3": "підходить?",
  "hrSpecialists": "Спеціалісти з управління персоналом та рекрутери, що займаються наймом в IT.",
  "technicalExecutives": "Технічні керівники та менеджери, що проводять інтерв'ю. Інтерв'юери на всіх рівнях досвіду, від початківців до професіоналів.",
  "allRights": "@ 2023 interviewboost. Усі права захищені",


  "whatIsHTML": "Що таке HTML і для чого він використовується?",
  "HTMLElement": "Що таке HTML-елемент? Яка його структура?",
  "attributesInHTML": "Що таке атрибути в HTML? Як вони використовуються в елементах?",
  "globalAttributes": "Які глобальні атрибути є в HTML?",
  "contentCategories": "Що таке категорії контенту в HTML5?",
  "primaryContentCategories": "Які категорії вважаються основними категоріями контенту?",
  "doctype": "Що таке doctype? І для чого він використовується?",
  "structureHTMLPage": "Опишіть базову структуру HTML-сторінки.",
  "validation": "Що таке валідація? І які типи перевірок HTML документа ви знаєте?",
  "stagesValidationChecks": "Основні етапи перевірок валідності HTML-документа?",
  "HTMLBlocks": "Якщо уявити HTML5 як відкриту веб-платформу, з яких блоків він складається?",
  "createButton": "Який тег використовувати, щоб створити кнопку?",
  "inlineStyle": "Що таке інлайновий стиль? Чи можна його перевизначити?",
  "elementsDefaultStyles": "Чи є у HTML елементів свої дефолтні специфічні стилі?",
  "semantics": "Що таке семантика? Які семантичні теги ви знаєте?",
  "semanticallyStructureImage": "Як семантично правильно верстати зображення з підписом?",
  "typesListsHTML": "Типи списків в HTML?",
  "alt": "Для якого тега використовується атрибут alt і для чого він потрібен?",
  "strongEmAndBI": "Яка різниця між тегами <strong><em> и <b><i>?",
  "typesInputHTML": "Типи <input> елементів в HTML?",
  "dataAttributes": "Для чого використовують data-атрибути?",
  "asyncAndDefer": "Різниця між <script>, <script async> і <script defer>?",
  "datalistElement": "Для чого використовується елемент <datalist>?",
  "placeLinkCSS": "Чому доброю практикою вважається розміщувати <link> для підключення CSS стилів в середині тега <head>, а <script> для підключення JS ставити перед закриваючим тегом </body>?",
  "metaTags": "Що таке мета-теги?",
  "headTag": "Що описується в тезі <head>?",
  "trThTdTags": "Для чого використовуються теги <tr>, <th>, <td>?",
  "viewport": "Розповідь про meta-тег з назвою viewport?",
  "canvas": "Що таке елемент <canvas>? І для чого він використовується?",
  "svgAndCanvas": "Що таке <svg> і <canvas>?",
  "canvasAndSvg": "Різниця між <canvas> і <svg>?",
  "betterUseCanvasAndSvg": "В яких випадках краще використовувати <canvas>, а в яких <svg>?",
  "+-CanvasAndSvg": "Переваги та недоліки <canvas> і <svg>?",
  "autocompleteAttribute": "Для чого потрібний атрибут autocomplete?",
  "outputInHTML": "Що таке елемент <output> в HTML5?",
  "valueAsNumber": "Що таке властивість valueAsNumber?",
  "targetAttribute": "Для чого потрібний атрибут target? Які значення він приймає?",
  "applicationCacheInHTML": "Що таке ApplicationCache в HTML5?",
  "pictureElement": "Для чого використовується елемент <picture>?",
  "srcset": "Що таке srcset? Як він працює?",
  "semanticallyNavigationMenu": "Як семантично правильно верстати навігаційне меню?",
  "Iframe": "Що таке <iframe>?",
  "SubAndSupTags": "Для чого використовуються теги <sub> i <sup>?",
  "hideMarkupElement": "Як можна приховати елемент розмітки без використання CSS та JS?",
  "meterAndProgress": "Різниця між <meter> i <progress>?",
  "groupOptions": "Як можна згрупувати опції всередині тега <select>?",
  "changeShapeImage": "Як можна змінити форму зображення або HTML елемента?",
  "articleAndSection": "Чим відрізняється <article> від <section>?",
  "featuresStylingSvg": "Розповідь про особливості стилізації <svg>?",
  "buttonAndLink": "Різниця між кнопкою та посиланням в HTML?",
  "decodingAttribute": "Для чого потрібний атрибут decoding?",
  "enterkeyhintAttribute": "Для чого використовується атрибут enterkeyhint?",
  "novalidateAttribute": "Для чого використовують атрибут novalidate?",
  "inputmodeAttribute": "Для чого використовується атрибут inputmode?",
  "patternAttribute": "Для чого використовується атрибут pattern?",
  "UseSemanticTags": "Чому варто використовувати семантичні теги в верстці?",
  "labelTag": "Для чого використовується тег <label>?",
  "waysToImprovePage": "Способи покращення продуктивності веб-сторінки при використанні HTML?",
  "attributesHTMLForms": "Основні атрибути HTML-форм? Як вони впливають на відправку даних з веб-сторінки?",
  "HTMLElementsdToTables": "Які HTML-елементи використовуються для створення і форматування таблиць? Які атрибути у них є?",
  "whatIsCSS": "Чо це таке CSS? І для чого він використовується?",
  "CSSRule": "Що таке CSS-правило?",
  "waysAddCSS": "Варіанти додавання CSS стилів на сторінку?",
  "positioningCSS": "Типи позиціонування в CSS?",
  "CSSBoxModel": "Блочна модель CSS?",
  "selector": "Що таке селектор? І які селектори існують?",
  "selectorSpecificity": "Що таке специфічність селектора? Як розрахувати вагу селектора?",
  "resetAndNormalize": "Різниця між Reset.css і Normalize.css?",
  "marginAndPadding": "Різниця між margin і padding?",
  "displayAndVisibility": "Різниця між display: none і visibility: hidden?",
  "blockAndInline": "Різниця між блочними і строчними (інлайновими) елементами?",
  "classAndID": "Різниця між класом і ідентифікатором в CSS?",
  "Sprite": "Що таке CSS спрайт? І для чого він використовується?",
  "vendorPrefixes": "Що таке вендорні префікси? І для чого вони використовуються?",
  "pseudoElements": "Що таке псевдоелементи? І для чого вони використовуються?",
  "marginCollapsing": "Що таке згортання границь (margin collapsing)?",
  "preprocessor": "Що таке CSS препроцесор?",
  "zIndex": "Що таке z-index? Як формується контекст накладання?",
  "orderElements": "Порядок накладання елементів в CSS (Stacking Order)?",
  "supportCSSProperty": "Як за допомогою CSS визначити, чи підтримується властивість в браузері?",
  "supportPages": "Як підтримувати сторінки в браузерах з обмеженими можливостями?",
  "fixStylingDifferentBrowsers": "Як виправляти специфічні проблеми зі стилями для різних браузерів?",
  "globalKeywords": "Глобальні ключові слова в CSS?",
  "CSSAttributeAttr": "Що таке CSS-атрибут (attr)?",
  "SelectorList": "Що таке перерахування селекторів?",
  "currentColor": "Для чого використовується ключове слово currentColor в CSS?",
  "pseudoClassesInCSS3": "Які псевдокласи були додані в CSS3?",
  "filters":  "Які фільтри є в CSS?",
  "invalidPseudoClass": "Для чого використовується псевдоклас :invalid?",
  "displayProperty": "Розкажіть про властивість display в CSS?",
  "translateOrAbsolutePositioning": "В якому випадку краще використовувати translate() замість абсолютного позиціонування?",
  "fFloatingElements": "Що таке плаваючі елементи (floats)? Як вони працюють?",
  "textRendering": "Розкажіть про властивість text-rendering?",
  "textDecorationSkipInk": "Розкажіть про властивість text-decoration-skip-ink?",
  "pointerEvents": "Розкажіть про властивість pointer-events?",
  "outline": "Розкажіть про властивість outline?",
  "scrollbarGutter": "Розкажіть про властивість scrollbar-gutter?",
  "shorthandCSSProperties": "Чому не варто використовувати скорочені записи властивостей CSS?",
  "textHighlighting": "Назвіть псевдоелементи для підсвічування тексту?",
  "colorInCSS": "Способи задання кольору в CSS?",
  "propertiesForAnimations": "Які CSS-властивості використовуються для створення анімацій і плавних переходів?",
  "principlesScalability": "Принципи і підходи для забезпечення масштабованості і підтримуваності CSS-коду?",
  "BEMMethodology":  "Плюси і мінуси методології БЕМ?",
  "CSSPreprocessors": "Які CSS-препроцесори ви знаєте? Переваги їх використання?",
  "orderElementsOnPage": "Яка CSS-властивість використовується для зміни порядку відображення елементів на веб-сторінці без зміни їх фізичного розташування в HTML-коді?",
  "differencePseudoClassesAndPseudoElements": "Різниця між псевдокласами і псевдоелементами?",
  "createStyleOnLargeProjects": "Як створювати і підтримувати єдиний стиль CSS на великих проектах?",
  "containerQueries":  "Що таке 'контейнерні запити' (container queries)? Як вони відрізняються від медіазапитів (media queries)?",
  "dataTypesJavaScript": "Типи даних в JavaScript?",
  "equality": "Різниця між == та === (нестрога та строга рівність)?",
  "strictMode": "Що таке Strict mode в JavaScript?",
  "declarationAndExpression": "Різниця між function declaration і function expression?",
  "nullAndUndefined": "Різниця між null та undefined?",
  "typesOfTimers": "Типи таймерів в JavaScript?",
  "hoisting": "Що таке підняття (Hoisting)?",
  "scope": "Що таке область видимості (Scope)?",
  "varLetAndConst": "Різниця між var, let та const?",
  "closure": "Що таке замикання (Closure)?",
  "thisInJavaScript": "Що позначає this в JavaScript?",
  "higherOrderFunctions": "Що таке функції вищого порядку (Higher Order Functions)?",
  "convertToBoolean": "Як перетворити будь-який тип даних в булевий? Перерахуйте хибні значення в JS?",
  "stringMethod": "Методи рядків в JavaScript?",
  "arrayMethods": "Методи масивів в JavaScript?",
  "pureFunction": "Що таке чиста функція?",
  "forEachAndMap": "Різниця між .forEach() та .map()?",
  "callApplyAndBind": "Різниця між .call(), .apply() та .bind()?",
  "functionsFirstClassObjects": "Чому в JavaScript функції називають об'єктами першого класу?",
  "checkPropertyInObject": "Як визначити наявність властивості в об'єкті?",
  "IIFE": "Що таке IIFE?",
  "pseudoArray": "Що таке псевдомасив arguments?",
  "hostObjectsAndNativeObjects": "Різниця між host-об'єктами та нативними об'єктами?",
  "comparingTwoObjects": "Чому результат порівняння 2х об'єктів - це false?",
  "prototypalInheritance": "Що таке прототипне наслідування? Як створити об'єкт без прототипа?",
  "extendingObjectsBadPractice": "Чому розширення нативних об'єктів JavaScript - це погана практика?",
  "NaN": "Що таке NaN? Як визначити, що значення дорівнює NaN?",
  "wrapperObject": "Що таке об'єктна обгортка (Wrapper Objects)?",
  "createObject": "Як в JavaScript створити об'єкт?",
  "purposeNewKeyword": "Для чого використовується ключове слово new?",
  "logicalAndOrOperators": "Оператори «І» та «АБО» (&& і ||)?",
  "doubleNegationOperator": "Для чого використовується оператор подвійного заперечення (!!)?",
  "remainderOperator": "Для чого використовується оператор залишку (%)?",
  "valueIsAnArray": "Як перевірити, чи є значення масивом?",
  "boxingUnboxing": "Як працює boxing/unboxing в JavaScript?",
  "memoization": "Що таке мемоізація? Реалізуйте базову логіку функції для мемоізації?",
  "inAndHasOwnProperty": "Різниця між оператором in та методом .hasOwnProperty()?",
  "deepAndShallowObjectCopies": "Різниця між глибоким (deep) та поверхневим (shallow) копіюванням об'єкта? Як зробити кожну з них?",
  "methodChaining": "Що таке ланцюг викликів функцій (chaining)? Як реалізувати такий підхід?",
  "undeclaredVariable": "Що таке неоголошена змінна?",
  "functionParametersPassedBy": "Як передаються параметри в функцію: за посиланням чи за значенням?",
  "prototypeObject": "Що таке прототип об'єкта в JavaScript?",
  "objectCreateMethod": "Як працює метод Object.create()?",
  "objectFreezeAndObjectSeal": "Різниця між Object.freeze() та Object.seal()?",
  "sliceAndSplice": "Різниця між методами .slice() та .splice()?",
  "findFindIndexAndIndexOf": "Як працюють методи .find(), .findIndex() та .indexOf()?",
  "usingUseStrict": "Плюси та мінуси використання use strict?",
  "pushPopShiftUnshift": "Різниця між методами .push(), .pop(), .shift() та .unshift()?",
  "immutability": "Плюси та мінуси імутабельності? Як досягти імутабельності в JS?",
  "popUpWindows": "Типи виринаючих вікон в JavaScript?",
  "typesObjects": "Типи об'єктів JavaScript?",
  "programmingParadigms": "Парадигми програмування в JavaScript?",
  "typesOfErrors": "Типи помилок в JavaScript?",
  "typeofAndInstanceof": "Різниця між typeof та instanceof?",
  "staticallyOrDynamicallyTyped": "JavaScript статично чи динамічно типизована мова?",
  "regularExpression": "Що таке регулярний вираз (Regular Expression)?",
  "recursion": "Що таке рекурсія?",
  "objectPrototype": "Що таке прототип (Prototype) об'єкта?",
  "methodsInRegularExpressions": "Які методи використовуються в регулярних виразах?",
  "polyfill": "Що таке поліфіл (polyfill)?",
  "switchCase": "Що таке switch/case? Правила користування switch/case?",
  "typesOfFunctions": "Типи функцій за здатністю приймати інші функції?",
  "expressionsAndStatements": "Що таке вирази (expression) і інструкції (statement) в JavaScript?",
  "someAndEvery": "Різниця між .some() і .every()?",
  "generateARandomNumber": "Як згенерувати випадкове число в JavaScript?",
  "typesOfOperators": "Типи операторів в JavaScript?",
  "functionParameterAndArgument": "Різниця між параметром і аргументом функції?",
  "namingVariablesAndFunctions": "Правила задання імен для змінних і функцій в JavaScript?",
  "explicitAndImplicitCoercion": "Різниця між явним і неявним приведенням типів (Implicit and Explicit Coercion)?",
  "arrayFrom": "Для чого застосовується метод Array.from()?",
  "convertingAnArrayToObject": "Назвіть способи перетворення масиву в об'єкт?",
  "oObjectAndMap": "Різниця між Object і Map?",
  "currying": "Для чого використовується каррірування?",
  "objectSeal": "Для чого використовується метод Object.seal()?",
  "datasetProperty": "Для чого використовується властивість .dataset?",
  "shareCode": "Яким чином можна обмінюватися кодом між файлами?",
  "garbageCollector": "Як працює 'сборщик сміття' в JavaScript?",
  "memoryLeaks": "Що таке витоки пам'яті?",
  "typesOfMemoryLeaks": "Назвіть основні типи утечок пам'яті в JavaScript?",
  "executionContext": "Як працює контекст виконання (execution context) в JavaScript?",
  "primitiveAndObject": "Різниця між примітивом і об'єктом?",
  "maxCallStackSizeExceeded": "Що означає текст 'max call stack size exceeded' у консолі?",
  "whatIsDOM": "Що таке DOM?",
  "typesOfDOMTreeNodes": "Типи вузлів DOM-дерева?",
  "findElementsInDOM": "Методи пошуку елементів в DOM?",
  "traverDOMTree": "Властивості для переміщення по DOM-дереву?",
  "attributeAndProperty": "Різниця між attribute і property у DOM-елементів?",
  "BOM": "Що таке BOM?",
  "events": "Види подій в JavaScript?",
  "addAnEventHandler": "Як додати обробник подій на DOM-елемент?",
  "removeAnEventHandler": "Як видалити обробник подій з DOM-елементу?",
  "eEventPropagation": "Що таке розповсюдження подій (Event Propagation)?",
  "eEventDelegation": "Що таке делегування подій (Event Delegation)?",
  "mediaQueries": "Як використовувати медіа вирази в JavaScript?",
  "coordinatesInBrowser": "Розкажіть про координати в браузері?",
  "HTMLCollectionAndNodeList": "Різниця між HTMLCollection і NodeList?",
  "addElementToPage": "Як динамічно додати елемент на HTML-сторінку?",
  "featureAndUserAgent": "Різниця між feature detection, feature inference і аналізом рядка user-agent?",
  "preventDefaultAndStopPropagation": "Різниця між e.preventDefault() і e.stopPropagation()?",
  "eventTargetAndEventCurrentTarget": "Різниця між event.target і event.currentTarget?",
  "stopPropagationAndStopImmediatePropagation": "Різниця між .stopPropagation() і .stopImmediatePropagation()?",
  "loadAndDOMContentLoadedEvents": "Різница між подіями load и DOMContentLoaded?",
  "argumentsAddEventListener": "Скільки аргументів приймає addEventListener?",
  "innerHTMLAndOuterHTML": "Різниця між innerHTML і outerHTML?",
  "JSONAndXML": "Різниця між JSON і XML?",
  "usageEventPreventDefault": "Як дізнатися про використання метода event.preventDefault()?",
  "purposeWindowNavigatory": "Для чого використовується властивість window.navigator?",
  "purposeFocus": "Для чого використовується метод .focus()?",
  "formsProperty": "Для чого використовується властивість .forms?",
  "scrollIntoView": "Для чого використовується метод .scrollIntoView()?",
  "submitAndRequestSubmit": "Різниця між методами .submit() і .requestSubmit()?",
  "intersectionObserver": "Розкажіть про IntersectionObserver?",
  "URLSearchParams": "Розкажіть про URLSearchParams?",
  "limitationsWindowClose": "Які є обмеження у window.close()?",
  "synchronousAndAsynchronousFunctions": "Різниця між синхронними і асинхронними функціями?",
  "AJAX": "Що таке AJAX?",
  "sameOriginPolicy": "Що таке same-origin policy у контексті JavaScript?",
  "eventLoop": "Що таке цикл подій (event loop) і як він працює?",
  "microtasksAndMacrotasks": "Різниця між мікро і макрозавданнями в event loop?",
  "queueMicrotask": "Розкажіть про queueMicrotask?",
  "promises": "Що таке проміси (Promises)?",
  "+-Ajax": "Плюси та мінуси використання Ajax?",
  "workingAsynchronousCode": "Підходи при роботі з асинхронним кодом?",
  "promisesOverCallbacks": "Переваги використання промісів замість колбеків?",
  "callbackFunction": "Що таке callback-функція? Що таке Callback Hell?",
  "asyncAwait": "Що таке async/await?",
  "promiseAllPromiseAnyPromiseRace": "Різниця між Promise.all(), Promise.any() и Promise.race()?",
  "allSettled": "Розкажіть про статический метод .allSettled()?",
  "asynchronousProgramming": "Плюси та мінуси асинхронного програмування в JavaScript?",
  "issuesWithCallback": "Проблеми при використанні колбек-функцій?",
  "multipleAsynchronousOperations": "Як виконати декілька асинхронних операцій послідовно?",
  "problemsIncorrectUseAsynchrony": "Які проблеми може викликати неправильне використання асинхронності в JavaScript?",
  "ECMAScript": "Що таке ECMAScript? В чому відмінність від JavaScript?",
  "letConstVar": "Різниця між let, const і var?",
  "changeValueConst": "Чи можна змінити значення, визначене через const?",
  "temporalDeadZone": "Що таке тимчасова мертва зона (temporal dead zone)?",
  "restAndSpreadOperators": "Різниця між Rest і Spread операторами?",
  "destructuring": "Що таке деструктуризація?",
  "forOfLoop": "Для чого використовується цикл for…of?",
  "templateLiterals": "Що таке шаблонні літерали (Template Literals)?",
  "setMapWeakMapWeakSet": "Що таке Set, Map, WeakMap та WeakSet?",
  "regularAndArrowFunctions": "Різниця між звичайними та стрілковими функціями?",
  "objectFreezeAndConst": "Різниця між методом Object.freeze() и const?",
  "iterators": "Що таке ітератори?",
  "generators": "Що таке генератори? Коли варто використовувати генератори?",
  "ES6Modules": "Що таке модулі ES6?",
  "symbolInES6": "Що таке символ (Symbol) в ES6?",
  "Includes": "Для чого використовується метод .includes()?",
  "getOwnPropertyDescriptors": "Для чого використовується метод .getOwnPropertyDescriptors()?",
  "keysValuesAndEntries": "Розкажіть про методи .keys(), .values(), .entries()?",
  "fromEntries": "Для чого використовується метод .fromEntries()?",
  "flatAndFlatMap": "Для чого використовується методи .flat() та .flatMap()?",
  "padStartAndPadEnd": "Для чого використовується методи .padStart() та .padEnd()?",
  "startsWithAndEndsWith": "Різниця між методами .startsWith() та .endsWith()?",
  "removeWhitespace": "Як в JavaScript видаляти пробільні символи в початку і в кінці рядка?",
  "optionalChainingOperator": "Розкажіть про оператор Optional Chaining (?.)?",
  "replaceAll": "Для чого використовується метод .replaceAll()?",
  "assignmentOperator": "Що таке оператор логічного присвоєння?",
  "mproveReadabilityLargeNumbers": "Як покращити читабельність великих чисел?",
  "privateAccessors": "Що таке приватні аксесори?",
  "ES6ClassesAndConstructor": "Різниця між класами ES6 та конструкторами функцій?",
  "nullishCoalescing": "Що таке оператор нульового об'єднання (??)?",
  "nullishCoalescingAndLogicalOr": "В чому різниця між оператором об'єднання зі значенням null (??) та оператором 'або' (||)?",
  "mapCollection": "Основні методи та властивості для роботи з колекцією Map?",
  "setCollection": "Основні методи та властивості для роботи з колекцією Set?",
  "iterateMapAndSet": "Як перебирати елементи в колекціях Map та Set?",
  "typeScript": "TypeScript - що це?",
  "componentsTS": "Основні компоненти TypeScript",
  "featuresTS": "Основні особливості TypeScript",
  "+TS": "Переваги використання TypeScript",
  "-TS": "Недоліки використання TypeScript",
  "typesTS": "Типи в TypeScript",
  "decorators": "Декоратори - що це?",
  "functionOverloading": "Чи підтримує TypeScript перевантаження функцій?",
  "typeAndInterface": "Різниця між типом (type) та інтерфейсом (interface)",
  "JSXInTS": "JSX в TypeScript - що це і які режими підтримує TypeScript?",
  "tripleSlashDirectives": "Директиви з трьома косою рискою (Triple-Slash Directives) - що це?",
  "ambientDeclarations": "Зовнішні оголошення змінних (ambient declaration) в TypeScript - що це?",
  "abstractClassAndInterface": "Різниця між абстрактним класом (abstract class) та інтерфейсом (interface)",
  "OOPInTS": "Які елементи ООП підтримуються в TypeScript?",
  "modifiers": "Модифікатори доступу в TypeScript",
  "internalAndExternalModules": "Різниця між внутрішніми (Internal Module) та зовнішніми модулями (External Module)",
  "decoratorsInTS": "Декоратори в TypeScript - що це?",
  "howDoesTypeScriptSupportOptionalAndDefaultFunctionParameters": "Як TypeScript підтримує необов'язкові та значення за замовчуванням параметри в функціях?",
  "whatIsEnum": "Перерахування (enum) - що це?",
  "noImplicit": "Для чого використовується NoImplicitAny в TypeScript?",
  "unionAndIntersection": "Різниця між типами 'Об'єднання' (|) та 'Перетин' (&)",
  "generic": "Загальні типи (generic) в TypeScript - що це?",
  "scopesTS": "Які області видимості доступні в TypeScript?",
  "mapFile": "Файл .map - що це і для чого його використовувати?",
  "TSInServer": "Чи можна використовувати TypeScript в серверній розробці?",
  "declareKeyword": "Для чого використовується ключове слово 'declare' в TypeScript?",
  "voidNeverAndUnknown": "Різниця між типами 'void', 'never' та 'unknown'",
  "catchErrorsTS": "Як ви виявляєте помилки в коді TypeScript?",
  "progressiveRendering": "Прогресивний рендеринг - що це?",
  "progressiveSSR": "Прогресивне SSR - що це?",
  "PWA": "Прогресивний веб-додаток (PWA) - що це?",
  "crossBrowser": "Кроссбраузерність - що це?",
  "OSIModel": "Модель OSI - що це?",
  "documentObject": "Потік документа - що це?",
  "adaptiveAndResponsive": "Різниця між адаптивним (adaptive) та відзивчивим (responsive) дизайнами",
  "progressiveEnhancementAndGracefulDegradation": "Різниця між прогресивним покращенням та граціозним зниженням",
  "webComponents": "Веб-компоненти - що це і які технології в них використовуються?",
  "multilingualWebsites": "Особливості розробки багатомовних веб-сайтів?",
  "REST": "REST - що це?",
  "RESTAndRESTfulAPI": "REST і RESTful API - що це?",
  "RESTArchitecture": "Принципи REST-архітектури",
  "richardsonMaturityModel": "Модель зрілості Річардсона - що це?",
  "levelsRichardsonMaturityModel": "Основні рівні моделі зрілості Річардсона",
  "criticalRenderingPathSteps": "Назвіть критичні етапи рендерингу",
  "layoutPaintingAndCompositing": "Різниця між layout, painting та compositing",
  "flashUnstyledContent": "Flash Of Unstyled Content (FOUC) - що це і як його уникнути?",
  "historyAPI": "API історії в браузері - що це?",
  "webStorage": "Веб-сховище (web storage) - що це?",
  "cookieSessionStorageAndLocalStorage": "Різниця між cookie, sessionStorage та localStorage",
  "reducePageLoadTimes": "Способи скорочення часу завантаження веб-сторінки",
  "coreWebVitals": "Які основні веб-показники включаються в Core Web Vitals?",
  "coreWebVitalsMetrics": "Розкажіть про показники Core Web Vitals",
  "preloadPrefetchPreconnectAndPrerender": "Різниця між preload, prefetch, preconnect та prerender",
  "PRPLPattern": "Для чого потрібен паттерн PRPL?",
  "whatIsHTTP": "HTTP - що це?",
  "HTTPRequest": "Запит HTTP - з чого він складається?",
  "methodsHTTPRequest": "Які методи може мати запит HTTP?",
  "HTTPCookie": "HTTP-кукі - що це і для чого вони використовуються?",
  "HTTPAndHTTPS": "Різниця між HTTP і HTTPS",
  "HTTP1AndHTTP2": "Різниця між HTTP/1 і HTTP/2",
  "multiplexingInHTTP2": "Як працює мультиплексування в HTTP/2?",
  "tripleHandshake": "Трьохстороннє рукопожаття (Triple handshake) - що це?",
  "PUTAndPOSTRequests": "Різниця між PUT- та POST-запитами",
  "TCPAndUDPProtocols": "Різниця між протоколами TCP та UDP",
  "webSocket": "WebSocket - що це і як він працює?",
  "LongPollingWebsocketsAndServerSentEvents": "Різниця між Long-Polling, Websockets та Server-Sent Events",
  "JSONP": "Як працює JSONP?",
  "indexedDB": "IndexedDB в браузері - що це і які переваги?",
  "serviceWorkers": "Service Workers - що це?",
  "webWorkers": "Web Workers - що це?",
  "webWorklet": "Web Worklet - що це?",
  "SSLTLS": "SSL/TLS - що це і для чого вони використовуються в веб-розробці?",
  "sessionClientAndServer": "Механізм встановлення сеансу між клієнтом і сервером",
  "API": "API - що це?",
  "CDN": "CDN - що це?",
  "IPAddress": "IP-адреса - що це?",
  "HostAndDomain": "Різниця між host і domain",
  "URIAndURL": "Різниця між URI і URL",
  "clearingCache": "Чому важливо очищати кеш і як це можна зробити?",
  "identificationAuthenticationAndAuthorization": "Різниця між ідентифікацією, аутентифікацією та авторизацією",
  "typesAuthentication": "Види аутентифікації",
  "secureAndHttpOnlyCookies": "Безпечні (Secure) та HttpOnly cookies - що це?",
  "contentSecurityPolicy": "Content Security Policy (CSP) - що це?",
  "CORS": "CORS - що це?",
  "crossSiteScripting": "Міжсайтовий скриптинг (XSS) - що це?",
  "methodsApplicationSecurity": "Методи підвищення безпеки веб-застосунків",
  "OWASPTop10": "OWASP Top 10 - що це?",
  "principlesOfOOP": "Основні принципи ООП",
  "SOLID": "SOLID - що це?",
  "classAndPrototypalInheritance": "Різниця між класовою та прототипною спадковістю",
  "dataFlow": "Однобічний потік даних та двостороння зв'язок даних - в чому різниця?",
  "functionalProgramming": "Функціональне програмування",
  "MVC": "Що таке MVC?",
  "MVVM": "Що таке MVVM?",
  "MVP": "Що таке MVP?",
  "drawbacksMVWPattern": "Недоліки патерна MVW?",
  "fFunctionAndAMethod": "В чому різниця між функцією та методом?",
  "whatIsCurrying": "Що таке каррірування (Currying)?",
  "OOPAndFP": "Різниця між ООП та ФП в JavaScript?",
  "+-OfFPAndOOP": "Переваги та недоліки ФП та ООП?",
  "monolithicAndMicroservicesArchitectures": "Різниця між монолітною та мікросервісною архітектурами?",
  "+-monolithicAndMicroservicesArchitectures": "Переваги та недоліки монолітної та мікросервісної архітектур?",
  "principlesInheritance": "Які принципи можна застосовувати разом із наслідуванням?",
  "principlesBesidesSOLID": "Які ще принципи, крім SOLID, ви знаєте?",
  "pbjectPropertyDescriptors": "Що таке дескриптори властивостей об'єктів?",
  "gettersAndSetters": "В чому полягають особливості геттерів і сеттерів?",
  "staticClassMethod": "Що таке статичний метод класу (static)? Як його викликати?",
  "compositionAndInheritance": "Різниця між композицією та наслідуванням?",
  "composition": "Що таке композиція в контексті JavaScript?",
  "designPattern": "Що таке паттерн або шаблон проектування?",
  "typesDesignPatterns": "Типи паттернів?",
  "GOFPatterns": "Що таке паттерни GOF?",
  "GRASPPatterns": "Що таке паттерни GRASP?",
  "typesPolymorphism": "Типи поліморфізму?",
  "abstractClass": "Чи можна реалізувати абстрактний клас в JavaScript і як це зробити?",
  "prototypeMechanism": "Як працює механізм прототипів в JavaScript?",
  "principlesFunctionalProgramming": "Основні принципи функціонального програмування?",
  "prosFunctionalProgramming": "Переваги функціонального програмування?",
  "imperativeAndDeclarativeProgramming": "Різниця між імперативним та декларативним підходами до програмування?",
  "reactiveProgramming": "Що таке реактивне програмування?",
  "+-reactiveProgramming": "Переваги та недоліки реактивного програмування?",
  "inversionOfControl": "Що таке Інверсія управління (Inversion of control)?",
  "dependencyInjection": "Що таке Dependency injection?",
  "aggregationAndComposition": "Різниця між агрегацією та композицією?",
  "proceduralAndFunctionalProgramming": "Різниця між процедурним та функціональним програмуванням?",
  "WCAG": "Що таке WCAG?",
  "principlesOfAccessibility": "Основні принципи доступності",
  "screenReader": "Що таке скрінрідер?",
  "accessibilityLevels": "Рівні доступності",
  "hideContentFromScreenReaders": "Як сховати вміст від скрінрідерів?",
  "removeSemantics": "Як видалити семантику від елемента?",
  "ARIARoles": "Що таке ролі ARIA в веб-додатку?",
  "ariaRoledescription": "Для чого використовується атрибут aria-roledescription?",
  "HTMLAttributesAccessibility": "Які HTML атрибути можна використовувати для поліпшення доступності?",
  "accessibilityTestingTools": "Назвіть засоби та методи тестування доступності",
  "accessibilityStandards": "Які стандарти доступності слід враховувати при розробці?",
  "usabilityAndAccessibility": "Різниця між usability та accessibility",
  "developingAccessibleWebsite": "Що потрібно враховувати при розробці доступного веб-сайту?",
  "whatIsReact": "Що таке React?",
  "benefitsReact": "Які основні переваги його використання в веб-розробці?",
  "featuresReact": "Перерахуйте особливості React.",
  "componentsReact": "Що таке компоненти в React? Як створити функціональний і класовий компонент?",
  "virtualDOM": "Що таке Virtual DOM в React? Які переваги він надає при оновленні інтерфейсу?",
  "kKeyAttribute": "Для чого потрібен атрибут key при рендері списків?",
  "pureComponent": "Що таке PureComponent?",
  "higherOrderComponents": "Що таке Компонент вищого порядку (Higher-Order Component/HOC)? Які завдання вони вирішують?",
  "controlledAndUncontrolledComponents": "Різниця між керованими (controlled) і некерованими (uncontrolled) компонентами?",
  "cmponentLifecycle": "Що таке життєвий цикл компонента (component lifecycle) в React?",
  "lifecycleMethods": "Методи життєвого циклу компонента в React?",
  "stagesComponentLifecycle": "Стадії життєвого циклу компонента в React?",
  "methodsHandleEvents": "Які методи можна використовувати для обробки подій в React?",
  "reactReconciliation": "Що таке Reconciliation в React?",
  "portal": "Що таке портал (Portal)?",
  "context": "Що таке контекст (Context) в React і для чого він використовується?",
  "reactHooks": "Що таке хуки React (Hooks), які хуки ви знаєте і для чого вони використовуються?",
  "JSX": "Що таке JSX?",
  "stateAndProps": "Різниця між станом (state) і пропсами (props)? Як вони використовуються?",
  "assDataToChildComponent": "Як передати дані від батьківського компонента до дочірнього компонента в React?",
  "reactMethods": "Які методи можна використовувати для обробки подій в React?",
  "stateManagement": "Як працює управління станом (state management) в великих React-додатках? Назвіть бібліотеки або підходи, які ви використовували.",
  "reactFiber": "Що таке React Fiber?",
  "fragment": "Що таке фрагмент (Fragment)? Чому фрагмент кращий, ніж div?",
  "reactRef": "Що таке React-посилання (ref)? Як створити посилання?",
  "shadowDOMAndVirtualDOM": "Різниця між тіньовим (Shadow) і віртуальним (Virtual) DOM?",
  "advantagesUsingReact": "Назвіть переваги використання React?",
  "conditionalRendering": "Що таке умовний рендеринг (Conditional Rendering)? Як його виконати?",
  "switchingComponent": "Що таке компонент-перемикач (Switching Component)?",
  "reactAndReactDOM": "Різниця між React і ReactDOM?",
  "componentAndContainer": "Різниця між компонентом і контейнером?",
  "restrictUseProp": "Як React обробляє або обмежує використання пропсів певного типу?",
  "strictModeReact": "Що таке строгий режим в React? Його переваги?",
  "propDrilling": "Що таке «виносити пропси» (Prop Drilling)? Як його уникнути?",
  "pollingReact": "Що таке «опитування» (Polling)? Як його реалізувати в React?",
  "elementAndComponent": "Різниця між елементом і компонентом?",
  "reactDOMServer": "Що таке ReactDOMServer?",
  "errorBoundaries": "Що таке обмеження помилок (Error Boundaries)?",
  "lazyFunction": "Що таке «лінива» (Lazy) функція?",
  "renderingAndMounting": "Різниця між рендерингом і монтажем?",
  "childrenInReact": "Що таке children?",
  "pointerEventsInReact": "Що таке події вказівника (Pointer Events)?",
  "inheritanceInversion": "Що таке інверсія наслідування (Inheritance Inversion)?",
  "twoWayDataBinding": "Як в React реалізувати двостороннє зв'язування даних?",
  "classComponentsAndFunctionalComponents": "Різниця між класовим і функціональним компонентами?",
  "useEffectAndComponentDidMount": "Різниця між useEffect() та componentDidMount()?",
  "advantagesOfHooks": "Переваги хуків?",
  "disadvantagesHooks": "Недоліки хуків?",
  "rulesUsingHooks": "Правила (обмеження) використання хуків?",
  "liftingStateUp": "Що таке підняття стану вгору (Lifting State Up)?",
  "shouldComponentUpdate": "Що робить метод shouldComponentUpdate?",
  "createElementAndCloneElement": "Різниця між createElement() та cloneElement()?",
  "useReducer": "Що таке useReducer()?",
  "initialRender": "Як реалізувати одноразове виконання операції при початковому рендерингу?",
  "distributedComponent": "Що таке розподілений компонент?",
  "useCallbackUseMemo": "Розкажіть про хуки useCallback(), useMemo(), useImperativeHandle(), useLayoutEffect()?",
  "renderHTML": "Як відобразити HTML-код у React-компоненті?",
  "functionUsingSetState": "З чим пов'язане використання setState() з функцією?",
  "registerServiceWorker": "Для чого призначений метод registerServiceWorker() у React?",
  "routingAReact": "Як організувати маршрутизацію (routing) у React-додатку?",
  "librariesRouting": "Які бібліотеки або інструменти для маршрутизації ви використовуєте?",
  "reactRouterAndRegularRouting": "В чому відмінність між React Router і звичайною маршрутизацією?",
  "newHooksVersion5": "Які хуки були додані в React Router версії 5?",
  "propsReactRouter": "Як передавати пропси в React Router?",
  "reselect": "Що таке Reselect і як він працює?",
  "goalReactFiber": "Назвіть основну мету React Fiber?",
  "return": "Які типи даних може повертати render()?",
  "memoAndUseMemo": "Різниця між memo і useMemo?",
  "syntheticEvents": "Що таке синтетичні події (SyntheticEvent) у React?",
  "isReactReactive": "Чи є React реактивним?",
  "optimizationReact": "Техніки оптимізації продуктивності React?",
  "bestPracticesReact": "Найкращі практики безпеки у React?",
  "toolsAndLibrariesTestingReact": "Які інструменти і бібліотеки для тестування React-компонентів ви використовуєте?",
  "principlesTestingReact": "Які принципи тестування React-додатків ви дотримуєтеся?",
  "whatIsVue": "Що таке Vue.js?",
  "featuresVue": "Перерахуйте особливості Vue.js.",
  "zdvantagesVue": "Перерахуйте переваги Vue.js.",
  "componentLifecycleVue": "Назвіть хуки життєвого циклу компонента в Vue.js?",
  "describeComponentLifecycleVue": "Опишіть життєвий цикл компонента в Vue.js?",
  "conditionalDirectivesVue": "Що таке умовні директиви (conditional directives)?",
  "showAndVIfDirectives": "Різниця між директивами v-show і v-if?",
  "computedProperties": "Що таке обчислювані властивості?",
  "eventModifiersVue": "Які модифікатори подій надає Vue.js?",
  "buttonModifiersVue": "Які модифікатори кнопок надає Vue.js?",
  "mouseButtonModifiersVue": "Які модифікатори кнопок миші надає Vue.js?",
  "componentVue": "Що таке компонент?",
  "propsTypesVue": "Що таке пропси? Типи пропсів?",
  "localAndGlobalComponentRegistration": "Різниця між локальною та глобальною реєстрацією компонента?",
  "mixinsVue": "Що таке міксини Vue.js?",
  "vueCLI": "Що таке Vue CLI?",
  "vuex": "Що таке Vuex?",
  "reactAndVueHave": "Що спільного у React і Vue.js?",
  "differenceReactAndVue": "Різниця між React і Vue.js?",
  "differenceAngularAndVue": "Різниця між Angular і Vue.js?",
  "SFC": "Що таке SFC? Які проблеми він вирішує?",
  "reactivityVue2AndVue3": "Як реалізована реактивність в Vue2 і Vue3?",
  "vueRouters": "Що таке Vue Router? Назвіть його особливості?",
  "nestedRoutesVue": "Що таке вкладені роути (Routes)?",
  "filtersVue": "Що таке фільтри? Як створити ланцюжок фільтрів?",
  "componentCommunicationVue": "Перерахуйте варіанти комунікації компонентів в Vue.js?",
  "modifiersVModel": "Які модифікатори підтримуються в моделі (v-model)?",
  "pluginsVue": "Що таке плагіни? Які можливості надають плагіни для Vue.js?",
  "slotVue": "Що таке слот (slot) в Vue.js?",
  "hooksByDirectives": "Які хуки надають директиви?",
  "directiveHookArguments": "Що таке аргументи директивних хуків?",
  "vueLoader": "Що таке vue-loader?",
  "renderFunctionVue": "Що таке функція рендеру (render function)? Переваги функції рендеру?",
  "keepAliveComponentsVue": "Що таке динамічні (keep-alive) компоненти?",
  "asynchronousComponentsVue": "Що таке асинхронні компоненти?",
  "whatIsAngular": "Що таке Angular?",
  "differenceAngularJSAndAngular": "Різниця між AngularJS і Angular?",
  "angularComponentLifecycle": "Методи життєвого циклу Angular компонента?",
  "constructorAndNgOnInit": "Різниця між constructor і ngOnInit?",
  "dataBindingAngular": "Що таке Data Binding в Angular?",
  "AOTAndJIT": "Різниця між AOT і JIT?",
  "changeDetection": "Що таке Change Detection, як працює механізм Change Detection?",
  "NgZone": "Що таке ngZone?",
  "changeDetectionAngular": "Стратегії виявлення змін в Angular?",
  "+UsingAngular": "Назвіть плюси використання Angular?",
  "-UsingAngular": "Назвіть мінуси використання Angular?",
  "dependencyInjectionAngular": "Що таке внедрення залежностей в Angular?",
  "directivesAngular": "Що таке директиви в Angular?",
  "ngTemplateNgContainerAndNgContent": "Для чого потрібні директиви ng-template, ng-container, ng-content?",
  "dynamicComponentsAngular": "Що таке динамічні компоненти в Angular?",
  "renderDynamicComponent": "Назвіть послідовність дій для відображення динамічного компонента?",
  "formsDataBindingAngular": "Основні форми прив'язки даних в Angular?",
  "loadingAngular": "Типи стратегій завантаження в Angular?",
  "routingAngular": "Що таке роутинг і як його створити в Angular?",
  "interpolationAngular": "Що таке інтерполяція в Angular?",
  "angularRoutersLifecycle": "Життєвий цикл в Angular Router?",
  "routerModuleForRoot": "Різниця між RouterModule.forRoot() і RouterModule.forChild()?",
  "ngrxStore": "Коли потрібно використовувати ngrx/store?",
  "smartAndPresentationalComponents": "Різниця між розумними і презентаційними компонентами?",
  "viewChildAndContentChild": "Різниця між @ViewChild() і @ContentChild()?",
  "templateVariable": "Що таке змінна шаблону (template variable)? Як її використовувати?",
  "viewEncapsulation": "Що таке View Encapsulation?",
  "storeDataAngular": "Як можна зберігати дані в Angular?",
  "templateDrivenAndReactiveForms": "Коли потрібно використовувати стандартні (template driven) і реактивні (reactive) форми?",
  "serviceIntoApplication": "Як внедрити сервіс в Angular додаток?",
  "performanceApplication": "Як покращити продуктивність Angular додатку?",
  "componentAndAModuleInAngular": "Різниця між компонентом і модулем в Angular?",
  "protectComponent": "Як захистити компонент, активований через роутер?",
  "promiseAndObservableAngular": "Різниця між Promise і Observable в Angular?",
  "declarationsProvidersAndImportsNgModule": "Різниця між declarations, providers і import в NgModule?",
  "reactiveProgrammingAngular": "Що таке реактивне програмування? Як воно використовується в Angular?",
  "securityAngular": "Найкращі практики безпеки в Angular?",
  "behaviorSubjectAndObservable": "Різниця між BehaviorSubject і Observable?",
  "ngZoneService": "Надайте хороший приклад використання сервісу NgZone?",
  "componentErrorMessages": "Як зробити компонент для відображення повідомлень про помилки?",
  "passDataToParentComponent": "Як передати дані з дочірнього компонента в батьківський?",
  "ngFormFormGroupAndFormControl": "Різниця між NgForm, FormGroup і FormControl?",
  "sharedModule": "Что таке Shared модуль?",
  "iImportingServiceBad": "Чому імпортувати сервіс з SharedModule в lazy loaded модуль вважається поганою практикою?",
  "switchMapConcatMapAndMergeMap": "Різниця між switchMap, concatMap і mergeMap?",
  "behaviorSubjectReplaySubjectAndAsyncSubject": "Різниця між BehaviorSubject, ReplaySubject та AsyncSubject?",
  "changeDetectionStrategy": "Принцип роботи ChangeDetectionStrategy.onPush?",
  "pipeAngular": "Що таке пайп (pipe) в Angular? Різниця між чистими та нечистими пайпами?",
  "componentsAngular": "Назвіть ключові компоненти Angular?",
  "componentAndDirective": "Різниця між компонентом та директивою?",
  "HttpClient": "Що таке HttpClient, перерахуйте його переваги?",
  "customElement": "Що таке користувацький елемент (Custom Element)? Як він працює?",
  "transformAngularIntoCustomElements": "Як трансформувати Angular-компоненти в користувацькі елементи?",
  "advantagesAOT": "Переваги використання AOT компіляції?",
  "advantagesUsingServiceWorkers": "Переваги використання сервіс-воркерів в Angular додатку?",
  "pPlatformAngular": "Що таке платформа в Angular?",
  "ngForDirectiveWithTrackBy": "Для чого використовується поєднання ngFor і trackBy?",
  "whatIsRedux": "Що таке Redux і які основні переваги його використання в управлінні станом в React-додатках?",
  "fundamentalConceptsRedux": "Які основні концепції існують в Redux і як вони пов'язані між собою (Store, Actions, Reducers)?",
  "storeRedux": "Що представляє собою сховище (Store) в Redux? Які методи і властивості сховища ви знаєте?",
  "actionRedux": "Як створити дію (Action) в Redux? Які типи дій можуть існувати?",
  "updatingStateRedux": "Які методи для оновлення стану існують в Redux? Як працює диспетчер (Dispatcher)?",
  "synchronousAndAsynchronousRedux": "В чому різниця між синхронними та асинхронними діями в Redux?",
  "reducerRedux": "Що таке редуктор (Reducer) в Redux і який його основний принцип роботи?",
  "multipleReducers": "Як організувати комбінування декількох редукторів в один кореневий редуктор?",
  "librariesRedux": "Які бібліотеки або інструменти для роботи з Redux ви використовували (наприклад, Redux Thunk, Redux Saga, Reselect)?",
  "selectorsRedux": "Що таке селектори (Selectors) в Redux і для чого вони використовуються?",
  "connectingRedux": "Які методи для підключення Redux до React-додатка ви знаєте (наприклад, connect з react-redux)?",
  "middlewareRedux": "Що таке middleware в Redux і для чого вони можуть бути використані? Згадайте деякі сторонні middleware для Redux.",
  "handleAsynchronousRedux": "Як обробляти асинхронні операції в Redux-додатку? Які підходи до асинхронності ви віддаєте перевагу?",
  "globalSettingsRedux": "Як організувати зберігання та обробку глобальних налаштувань або даних в Redux?",
  "debuggingRedux": "Які методи для налагодження Redux-додатків ви використовуєте? Згадайте інструменти або розширення для браузерів.",
  "whatIsReduxToolkit": "Що таке Redux Toolkit і які основні переваги його використання порівняно з чистим Redux?",
  "toolsToolkit": "Які ключові функції та інструменти надає Redux Toolkit для полегшення роботи з Redux?",
  "storeToolkit": "Як створити сховище (Store) за допомогою Redux Toolkit? Які функції та методи для цього надаються?",
  "slicesToolkit": "Що таке срези (Slices) в Redux Toolkit і для чого вони використовуються? Як створити сріз?",
  "toolkitActions": "Які методи в Redux Toolkit дозволяють створювати дії (Actions) та редюсери (Reducers) з більш компактним синтаксисом?",
  "handleAsynchronousToolkit": "Як організувати асинхронні операції за допомогою Redux Toolkit? Який middleware часто використовується з ним?",
  "toolkitUniqueIdentifiers": "Як Redux Toolkit керує створенням унікальних ідентифікаторів для дій і редюсерів?",
  "toolkitUpdateState": "Які методи в Redux Toolkit дозволяють оновлювати стан (state) з мінімальними витратами?",
  "selectorGenerationToolkit": "Які переваги приносить автоматичне створення селекторів (Selectors) за допомогою Redux Toolkit?",
  "codeServerToolkit": "Як організувати код з використанням 'даних на стороні сервера' (Server-Driven Data) за допомогою Redux Toolkit?",
  "performanceToolkit": "Як керувати та моніторити продуктивність при використанні Redux Toolkit? Які інструменти чи підходи ви знаєте?",
  "reduxToolkitAndReduxToolkitQuery": "В чому полягає різниця між Redux Toolkit і Redux Toolkit Query? Який підхід більш перевагою та в яких ситуаціях?",
  "patternsToolkit": "Які структури та шаблони проекту ви використовуєте з Redux Toolkit для організації коду?",
  "toolkitCompatibilityOtherLibraries": "Як забезпечується сумісність Redux Toolkit з іншими бібліотеками чи інструментами в екосистемі React і Redux?",
  "bestPracticesToolkit": "Які є найкращі практики та поради щодо використання Redux Toolkit в великих та складних додатках?"
}
